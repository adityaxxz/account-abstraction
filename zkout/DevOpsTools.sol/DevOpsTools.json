{"abi":null,"bytecode":{"object":"0000008003000039000000400030043f00000001022001900000001a0000c13d00000000020100190000000c02200198000000220000613d000000000101043b000000e0011002700000000d0210009c000000240000613d0000000e0110009c000000220000c13d000000c001000039000000400010043f0000000b01000039000000800010043f0000001102000041000000a00020043f0000002003000039000000c00030043f000000e00010043f000001000020043f0000010b0000043f0000001201000041000000290001042e0000000001000416000000000101004b000000220000c13d0000002001000039000001000010044300000120000004430000000b01000041000000290001042e00000000010000190000002a000104300000000f01000041000000800010043f0000001001000041000000290001042e0000002800000432000000290001042e0000002a000104300000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000fffffffc000000000000000000000000000000000000000000000000000000000000000000000000000000003a768463000000000000000000000000000000000000000000000000000000002aa1c6960000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d00000000000000000000000000000000000000200000008000000000000000002e2f62726f6164636173740000000000000000000000000000000000000000000000000000000000000000000000000000000060000000c00000000000000000"},"assembly":"\t.text\n\t.file\t\"DevOpsTools.sol:DevOpsTools\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\tr1, r0, r2\n\tand!\t@CPI0_1[0], r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.eq\t@.BB0_8\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tadd\t11, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_6[0], r0, r2\n\tst.1\t160, r2\n\tadd\t32, r0, r3\n\tst.1\t192, r3\n\tst.1\t224, r1\n\tst.1\t256, r2\n\tst.1\t267, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_8:\n\tadd\t@CPI0_4[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_1:\n\t.cell 340282366604025813406317257057592410112\nCPI0_2:\n\t.cell 980845667\nCPI0_3:\n\t.cell 715245206\nCPI0_4:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_5:\n\t.cell 2535301202817642044428229017600\nCPI0_6:\n\t.cell 20890112303180472637439307513574312835712064049056309200988646340848254976000\nCPI0_7:\n\t.cell 7605903604911151271132453142528\n","methodIdentifiers":{"RELATIVE_BROADCAST_PATH()":"2aa1c696","vm()":"3a768463"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"RELATIVE_BROADCAST_PATH\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"Vm\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/foundry-devops/src/DevOpsTools.sol\":\"DevOpsTools\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":foundry-era-contracts/=lib/foundry-era-contracts/\",\":murky/=lib/foundry-era-contracts/lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solpp/=lib/foundry-era-contracts/src/solpp/solpp-generated-contracts/\"]},\"sources\":{\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/foundry-devops/src/DevOpsTools.sol\":{\"keccak256\":\"0x6e310a8b06b2cb689b5e3c0deec45ef1ffc35d8accf79e4da2656cc5a3d10a36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c6337496be59bbd75e9fed8afc3822dda05162b6bb019820190956317860583\",\"dweb:/ipfs/Qmdr8twbe1Wr7DWGkZkrpKNVmSkwh9L5PSf7HKq7utYDWh\"]},\"lib/foundry-devops/src/StringUtils.sol\":{\"keccak256\":\"0xc21a2278d2872b8867aa123ee6c236f51a38a789e8aa80659655d7ccedef9341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c88541569ee44ee344e1adf17ec2d2dfd528dfc6495cd6767fcc536bca8b0d0e\",\"dweb:/ipfs/QmaRZNzPB62ruBepsG6zbUabyKRM1pdkGAGG5iL7mTEjri\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 39:\"lib/foundry-devops/src/DevOpsTools.sol\"\nobject \"DevOpsTools_42827\" {\n    code {\n        {\n            /// @src 39:301:3225  \"library DevOpsTools {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"DevOpsTools_42827_deployed\")\n            codecopy(_1, dataoffset(\"DevOpsTools_42827_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 39:\"lib/foundry-devops/src/DevOpsTools.sol\"\n    object \"DevOpsTools_42827_deployed\" {\n        code {\n            {\n                /// @src 39:301:3225  \"library DevOpsTools {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x2aa1c696 {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let newFreePtr := add(_1, _2)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        mstore(_1, 11)\n                        let _4 := 0x20\n                        mstore(add(_1, 0x20), \"./broadcast\")\n                        let memPos := mload(_2)\n                        mstore(memPos, 0x20)\n                        let length := mload(_1)\n                        mstore(add(memPos, 0x20), length)\n                        let i := _3\n                        for { } lt(i, length) { i := add(i, _4) }\n                        {\n                            mstore(add(add(memPos, i), _2), mload(add(add(_1, i), _4)))\n                        }\n                        mstore(add(add(memPos, length), _2), _3)\n                        return(memPos, add(sub(add(memPos, and(add(length, 31), not(31))), memPos), _2))\n                    }\n                    case 0x3a768463 {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d)\n                        return(memPos_1, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000818000a\"\n    }\n}\n","hash":"01000013cd913323be63ddd0a22afedad59f31300bc9c97a5958b700a6a40046","factoryDependencies":{},"id":39}