{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"HelperConfig.s.sol:HelperConfig\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_9\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_37\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.gt\t@.BB0_11\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.gt\t@.BB0_16\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_24\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_37\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_37\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_37\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tjump\t@.BB0_34\n.BB0_9:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_37\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tor\t@CPI0_2[0], r2, r2\n\tsstore\tr1, r2\n\tnear_call\tr0, @allocate_memory, @DEFAULT_UNWIND\n\tst.1.inc\tr1, r0, r1\n\tst.1\tr1, r0\n\tnear_call\tr0, @allocate_memory, @DEFAULT_UNWIND\n\tadd\t@CPI0_3[0], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t@CPI0_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_5[0], r0, r3\n\tst.1\t0, r3\n\tadd\t15, r0, r3\n\tst.1\t32, r3\n\tld.1\tr1, r1\n\tand\t@CPI0_6[0], r1, r1\n\tadd\t@CPI0_7[0], r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_8[0], r4, r4\n\tor\tr4, r1, r1\n\tsstore\tr3, r1\n\tld.1\tr2, r1\n\tand\t@CPI0_6[0], r1, r1\n\tadd\t@CPI0_9[0], r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_8[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_10[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_11:\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.gt\t@.BB0_20\n\tsub.s!\t@CPI0_15[0], r2, r1\n\tjump.eq\t@.BB0_26\n\tsub.s!\t@CPI0_16[0], r2, r1\n\tjump.ne\t@.BB0_37\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_37\n\tadd\t192, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t64, r1\n\tst.1\t128, r0\n\tst.1\t160, r0\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t@CPI0_3[0], r0, r1\n\tst.1\t192, r1\n\tjump\t@.BB0_28\n.BB0_16:\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_29\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.ne\t@.BB0_37\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_37\n\tadd\t14, r0, r1\n\tsload\tr1, r1\n\tadd\t13, r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_6[0], r2, r2\n\tst.1\t128, r2\n\tand\t@CPI0_6[0], r1, r1\n\tst.1\t160, r1\n\tadd\t@CPI0_25[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_20:\n\tsub.s!\t@CPI0_13[0], r2, r1\n\tjump.eq\t@.BB0_32\n\tsub.s!\t@CPI0_14[0], r2, r1\n\tjump.ne\t@.BB0_37\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_37\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_22[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_24:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_37\n\tnear_call\tr0, @fun_getOrCreateAnvilEthConfig, @DEFAULT_UNWIND\n\tjump\t@.BB0_35\n.BB0_26:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_37\n\tadd\t192, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t64, r1\n\tst.1\t128, r0\n\tst.1\t160, r0\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tst.1\t192, r0\n.BB0_28:\n\tadd\t@CPI0_4[0], r0, r1\n\tst.1\t224, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @abi_encode_struct_NetworkConfig, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tjump\t@.BB0_36\n.BB0_29:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_37\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_37\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r1\n\tand\t@CPI0_6[0], r1, r1\n\tst.1\t128, r1\n\tand\t@CPI0_6[0], r2, r1\n\tst.1\t160, r1\n\tadd\t@CPI0_25[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_37\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r0\n\tst.1\t160, r0\n\tadd\t32779, r0, r1\n\tadd\t4, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t3, r4, r4\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_24[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n.BB0_34:\n\tnear_call\tr0, @fun_getConfigByChainId, @DEFAULT_UNWIND\n.BB0_35:\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tnear_call\tr0, @abi_encode_struct_NetworkConfig, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r4\n.BB0_36:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_37:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nallocate_memory:\n.func_begin1:\n\tld.1\t64, r1\n\tsub.s!\t@CPI1_0[0], r1, r2\n\tjump.ge\t@.BB1_1\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tret\n.BB1_1:\n\tadd\t@CPI1_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_struct_NetworkConfig:\n.func_begin2:\n\tld.1.inc\tr2, r2, r3\n\tand\t@CPI2_0[0], r2, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr3, r3\n\tand\t@CPI2_0[0], r3, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r1\n\tret\n.func_end2:\n\nfinalize_allocation:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t64, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_getOrCreateAnvilEthConfig:\n.func_begin4:\n\tnop\tstack+=[4]\n\tld.1\t64, r1\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tadd\t14, r0, r3\n\tsload\tr3, r1\n\tand!\t@CPI4_1[0], r1, r2\n\tjump.eq\t@.BB4_6\n\tld.1\t64, r1\n\tsub.s!\t@CPI4_2[0], r1, r3\n\tjump.gt\t@.BB4_1\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tadd\t13, r0, r3\n\tsload\tr3, r3\n\tand\t@CPI4_1[0], r3, r3\n\tjump\t@.BB4_3\n.BB4_6:\n\tadd\tr3, r0, stack-[1]\n\tadd\t@CPI4_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI4_4[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI4_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_5[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_7\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB4_9\n\tld.1\t64, r4\n\tadd\t@CPI4_7[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r2\n\tadd\t@CPI4_8[0], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tst.1\tr2, r1\n\tadd\t@CPI4_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_5[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI4_5[0], r4, r3\n\tadd\tr4, r0, stack-[4]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[2]\n\tshl.s\t192, r2, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI4_9[0], r1, r1\n\tadd\t@CPI4_4[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI4_5[0], r3, stack[@returndatasize]\n\tand\t@CPI4_5[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_11\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t@CPI4_10[0], r4, r1\n\tjump.gt\t@.BB4_1\n\tst.1\t64, r4\n\tsub.s!\t@CPI4_11[0], r4, r1\n\tjump.gt\t@.BB4_1\n\tadd\t36, r4, r1\n\tadd\t@CPI4_12[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\t@CPI4_13[0], r0, r2\n\tst.1\tr4, r2\n\tadd\tstack-[3], r0, r2\n\tst.1\tr2, r0\n\tadd\t68, r4, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\t100, r4, r2\n\tst.1\tr2, r0\n\tadd\t@CPI4_5[0], r0, r2\n\tsub.s!\t@CPI4_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI4_14[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_19\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB4_21\n\tadd\t@CPI4_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI4_4[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI4_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_5[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_7\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB4_9\n\tld.1\t64, r4\n\tadd\t@CPI4_15[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI4_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_5[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI4_5[0], r4, r3\n\tadd\tr4, r0, stack-[3]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_16[0], r1, r1\n\tadd\t@CPI4_4[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI4_5[0], r3, stack[@returndatasize]\n\tand\t@CPI4_5[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_30\n\tadd\tstack-[3], r0, r4\n\tsub.s!\t@CPI4_10[0], r4, r1\n\tjump.gt\t@.BB4_1\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI4_1[0], r1, r3\n\tst.1\t64, r4\n\tsub.s!\t@CPI4_2[0], r4, r1\n\tjump.gt\t@.BB4_1\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI4_8[0], r0, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\tr1, r2\n\tst.1\tr4, r3\n\tadd\t13, r0, r1\n\tsload\tr1, r4\n\tand\t@CPI4_17[0], r4, r4\n\tor\tr4, r3, r4\n\tsstore\tr1, r4\n\tadd\tstack-[1], r0, r4\n\tsload\tr4, r1\n\tand\t@CPI4_17[0], r1, r1\n\tor\t@CPI4_8[0], r1, r1\n\tsstore\tr4, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI4_2[0], r1, r4\n\tjump.gt\t@.BB4_1\n\tadd\t64, r1, r4\n\tst.1\t64, r4\n.BB4_3:\n\tadd\t32, r1, r4\n\tst.1\tr4, r2\n\tst.1\tr1, r3\n\tret\n.BB4_1:\n\tadd\t@CPI4_18[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_7:\n\trevert\n.BB4_9:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_11:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB4_40\n\tadd\tr0, r0, r6\n.BB4_13:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB4_13\n.BB4_40:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB4_14\n\tjump\t@.BB4_15\n.BB4_19:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI4_5[0], r2, stack[@returndatasize]\n\tand\t@CPI4_5[0], r2, r2\n\tjump\t@.BB4_22\n.BB4_21:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB4_22:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB4_39\n\tadd\tr0, r0, r6\n.BB4_24:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB4_24\n.BB4_39:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB4_26\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB4_26:\n\tadd\t@CPI4_5[0], r0, r1\n\tsub.s!\t@CPI4_5[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI4_5[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_30:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB4_38\n\tadd\tr0, r0, r6\n.BB4_32:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB4_32\n.BB4_38:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB4_15\n.BB4_14:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB4_15:\n\tadd\t@CPI4_5[0], r0, r1\n\tsub.s!\t@CPI4_5[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_getConfigByChainId:\n.func_begin5:\n\tnop\tstack+=[4]\n\tld.1\t64, r2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tjump.ge\t@.BB5_26\n\tadd\t64, r2, r3\n\tst.1\t64, r3\n\tadd\t32, r2, r3\n\tst.1\tr3, r0\n\tst.1\tr2, r0\n\tsub.s!\t31337, r1, r2\n\tjump.ne\t@.BB5_6\n\tld.1\t64, r1\n\tsub.s!\t@CPI5_4[0], r1, r2\n\tjump.gt\t@.BB5_26\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tadd\t14, r0, r3\n\tsload\tr3, r1\n\tand!\t@CPI5_3[0], r1, r2\n\tjump.eq\t@.BB5_11\n\tld.1\t64, r1\n\tsub.s!\t@CPI5_4[0], r1, r3\n\tjump.gt\t@.BB5_26\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tadd\t13, r0, r3\n\tsload\tr3, r3\n\tand\t@CPI5_3[0], r3, r3\n\tjump\t@.BB5_25\n.BB5_6:\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_27\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tand!\t@CPI5_3[0], r1, r1\n\tjump.eq\t@.BB5_28\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB5_27\n\tld.1\t64, r1\n\tsub.s!\t@CPI5_4[0], r1, r2\n\tjump.gt\t@.BB5_26\n\tld\tr3, r2\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tsload\tr2, r3\n\tand\t@CPI5_3[0], r3, r3\n\tst.1\tr1, r3\n\tadd\t1, r2, r2\n\tsload\tr2, r2\n\tand\t@CPI5_3[0], r2, r2\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tret\n.BB5_11:\n\tadd\tr3, r0, stack-[1]\n\tadd\t@CPI5_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI5_8[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_27\n\tld.1\t64, r4\n\tadd\t@CPI5_10[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r2\n\tadd\t@CPI5_11[0], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tst.1\tr2, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI5_1[0], r4, r3\n\tadd\tr4, r0, stack-[4]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[2]\n\tshl.s\t192, r2, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI5_12[0], r1, r1\n\tadd\t@CPI5_8[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI5_1[0], r3, stack[@returndatasize]\n\tand\t@CPI5_1[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_30\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t@CPI5_13[0], r4, r1\n\tjump.gt\t@.BB5_26\n\tst.1\t64, r4\n\tsub.s!\t@CPI5_14[0], r4, r1\n\tjump.gt\t@.BB5_26\n\tadd\t36, r4, r1\n\tadd\t@CPI5_15[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\t@CPI5_16[0], r0, r2\n\tst.1\tr4, r2\n\tadd\tstack-[3], r0, r2\n\tst.1\tr2, r0\n\tadd\t68, r4, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\t100, r4, r2\n\tst.1\tr2, r0\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI5_17[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_34\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_35\n\tadd\t@CPI5_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI5_8[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_27\n\tld.1\t64, r4\n\tadd\t@CPI5_18[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI5_1[0], r4, r3\n\tadd\tr4, r0, stack-[3]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_6[0], r1, r1\n\tadd\t@CPI5_8[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI5_1[0], r3, stack[@returndatasize]\n\tand\t@CPI5_1[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_42\n\tadd\tstack-[3], r0, r4\n\tsub.s!\t@CPI5_13[0], r4, r1\n\tjump.gt\t@.BB5_26\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI5_3[0], r1, r3\n\tst.1\t64, r4\n\tsub.s!\t@CPI5_4[0], r4, r1\n\tjump.gt\t@.BB5_26\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI5_11[0], r0, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\tr1, r2\n\tst.1\tr4, r3\n\tadd\t13, r0, r1\n\tsload\tr1, r4\n\tand\t@CPI5_19[0], r4, r4\n\tor\tr4, r3, r4\n\tsstore\tr1, r4\n\tadd\tstack-[1], r0, r4\n\tsload\tr4, r1\n\tand\t@CPI5_19[0], r1, r1\n\tor\t@CPI5_11[0], r1, r1\n\tsstore\tr4, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI5_4[0], r1, r4\n\tjump.gt\t@.BB5_26\n\tadd\t64, r1, r4\n\tst.1\t64, r4\n.BB5_25:\n\tst.1\tr1, r3\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tret\n.BB5_26:\n\tadd\t@CPI5_20[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_27:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_28:\n\tld.1\t64, r1\n\tadd\t@CPI5_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_29:\n\trevert\n.BB5_30:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB5_33\n\tadd\tr0, r0, r6\n.BB5_32:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB5_32\n.BB5_33:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB5_47\n\tjump\t@.BB5_48\n.BB5_34:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI5_1[0], r2, stack[@returndatasize]\n\tand\t@CPI5_1[0], r2, r2\n\tjump\t@.BB5_36\n.BB5_35:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB5_36:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB5_39\n\tadd\tr0, r0, r6\n.BB5_38:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB5_38\n.BB5_39:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB5_41\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB5_41:\n\tadd\t@CPI5_1[0], r0, r1\n\tsub.s!\t@CPI5_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI5_1[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_42:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB5_45\n\tadd\tr0, r0, r6\n.BB5_44:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB5_44\n.BB5_45:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB5_48\n.BB5_47:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB5_48:\n\tadd\t@CPI5_1[0], r0, r1\n\tsub.s!\t@CPI5_1[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\n__cxa_throw:\n.func_begin6:\n\trevert\n.func_end6:\n\n__sha3:\n.func_begin7:\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_2\n\tld\tr1, r1\n\tret\n.BB7_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\n__system_request:\n.func_begin8:\n\tadd\tr1, r0, r5\n\tst.2\t0, r2\n\tsub.s!\t4, r3, r1\n\tjump.le\t@.BB8_3\n\tshr.s\t5, r4, r1\n\tadd\tstack[r1], r0, r1\n\tst.2\t4, r1\n.BB8_3:\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI8_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_4\n\tld\tr1, r1\n\tret\n.BB8_4:\n\trevert\n.func_end8:\n\n__farcall:\n.func_begin9:\n.tmp0:\n\tfar_call\tr1, r2, @.BB9_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n__staticcall:\n.func_begin10:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB10_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_5:\nCPI5_1:\nCPI7_0:\nCPI8_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -16711936\nCPI0_2:\n\t.cell 65537\nCPI0_3:\n\t.cell 547733466371960611141041528242004465362790066057\nCPI0_4:\n\t.cell 572038313094850821099624258919152072749626292365\nCPI0_5:\n\t.cell 11155111\nCPI0_6:\nCPI2_0:\nCPI4_1:\nCPI5_3:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_7:\n\t.cell -35500743051092520759827857050910667649908473435960571958683154363325319779920\nCPI0_8:\nCPI4_17:\nCPI5_19:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_9:\n\t.cell -35500743051092520759827857050910667649908473435960571958683154363325319779919\nCPI0_10:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_11:\n\t.cell 3124675411\nCPI0_12:\n\t.cell 3287878099\nCPI0_13:\n\t.cell 3287878100\nCPI0_14:\n\t.cell 4174167879\nCPI0_15:\n\t.cell 3124675412\nCPI0_16:\n\t.cell 3263788497\nCPI0_17:\n\t.cell 2073671170\nCPI0_18:\n\t.cell 2073671171\nCPI0_19:\n\t.cell 2786030870\nCPI0_20:\n\t.cell 311430568\nCPI0_21:\n\t.cell 547104235\nCPI0_22:\n\t.cell 16711680\nCPI0_23:\n\t.cell 2535301202817642044428229017600\nCPI0_24:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_25:\n\t.cell 5070602403274100847421635428352\nCPI1_0:\nCPI3_0:\nCPI4_0:\nCPI5_0:\n\t.cell 18446744073709551552\nCPI1_1:\nCPI3_1:\nCPI4_18:\nCPI5_20:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI1_2:\nCPI3_2:\nCPI4_9:\nCPI5_12:\n\t.cell 2852213850513516153367582212096\nCPI4_2:\nCPI5_4:\n\t.cell 18446744073709551551\nCPI4_3:\nCPI5_7:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI4_4:\nCPI5_8:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI4_6:\nCPI5_9:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI4_7:\nCPI5_10:\n\t.cell 57861001352061575297113109862124438461155370584296964375022396541557157134336\nCPI4_8:\nCPI5_11:\n\t.cell 1390849295786071768276380950238675083608645509734\nCPI4_10:\nCPI5_13:\n\t.cell 18446744073709551615\nCPI4_11:\nCPI5_14:\n\t.cell 18446744073709551483\nCPI4_12:\nCPI5_15:\n\t.cell 452374943005036200519583202555859360504835418239419190740359722519815552365\nCPI4_13:\nCPI5_16:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI4_14:\nCPI5_17:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI4_15:\nCPI5_18:\n\t.cell 53787885087763336501906314510680303380505312860176240795757540877198344323072\nCPI4_16:\nCPI5_6:\n\t.cell 316912650057057350374175801344\nCPI5_2:\nCPI7_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI5_5:\n\t.cell -24905331773721862916678141744605343147923063662538908861294807260277053063168\nCPI8_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\n","methodIdentifiers":{"IS_SCRIPT()":"f8ccbf47","getConfig()":"c3f909d4","getConfigByChainId(uint256)":"209c25eb","getEthSepoliaConfig()":"c28975d1","getOrCreateAnvilEthConfig()":"12900da8","getZkSyncSepoliaConfig()":"ba3ec354","localNetworkConfig()":"a60f7516","networkConfigs(uint256)":"7b99b603"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"HelperConfig__InvalidChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct HelperConfig.NetworkConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getConfigByChainId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct HelperConfig.NetworkConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthSepoliaConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct HelperConfig.NetworkConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOrCreateAnvilEthConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct HelperConfig.NetworkConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZkSyncSepoliaConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct HelperConfig.NetworkConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localNetworkConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"networkConfigs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/HelperConfig.s.sol\":\"HelperConfig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":foundry-era-contracts/=lib/foundry-era-contracts/\",\":murky/=lib/foundry-era-contracts/lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solpp/=lib/foundry-era-contracts/src/solpp/solpp-generated-contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/EntryPoint.sol\":{\"keccak256\":\"0x0eb1245b5541ff0fbc0f2a23c746e2b4eb9c46e801a4847f15d7d96d1cecc576\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b002e499336c8f6ec05230762cccd3b48d67a2ec547e2789cfb70132af0b430f\",\"dweb:/ipfs/QmfRGPNgBrfxmLt9PQUEjocVmC47Mx14Vie1tziTARRZfq\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"lib/account-abstraction/contracts/core/NonceManager.sol\":{\"keccak256\":\"0x1f951786ce6f171e7ed0242fee73ee4a205c7523404ee6cffca48b8c64ea5fe9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a602bf2274d478dae7a532cca31f8179131808c324cc26ece5c7e87c5a1015a6\",\"dweb:/ipfs/QmaaSyw5GGbAWzUhAPCtsb38P3MmaVr1ngp61PYHCU2a5a\"]},\"lib/account-abstraction/contracts/core/SenderCreator.sol\":{\"keccak256\":\"0xeb95afb6e4cf921c1ed105ecb9f549ca46bee57f68acd1d2f4f84607ac0db5c5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2ac91562f1fcabe4809a1b4256895efebcf46f89e08336a6c09ee2d29733238\",\"dweb:/ipfs/QmPsQnPcCzioPwVtUhxkbnwKPC1bnhHSbAwK9GXVpjN3mH\"]},\"lib/account-abstraction/contracts/core/StakeManager.sol\":{\"keccak256\":\"0x673eb19600058d8642605ca409c9e1d4cab13735564b856270b92c330ffb1b8d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://06599c57c7075ee8eb5f1710fccca3eb322876b968ec271e1fb34af41510ab2c\",\"dweb:/ipfs/QmVsDEjmZYtzgXa4AYKxbQEYQVh6NBq8GmFJCariBUqK4G\"]},\"lib/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"lib/account-abstraction/contracts/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0xd3dc32dde1add1fb6377f939ceff6be31c2e21343522311f7b88db666be9ee6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b8f065171bd32e23b306868189c730f849ce6147f753c59e396e7afcf384577\",\"dweb:/ipfs/QmZpDRNEZ9YNgGgyLQo5yM4bB1FNbtnfDABsChbgSQKXUh\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x22a852ab11cd80f4bf1c0628ad713278aaa232b406c23b32b8ec26fab4eea44f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://acd04532887d2dce46794bcb028f90e3289999f560e6896cf72b9e7d332084de\",\"dweb:/ipfs/QmSSkEt5eAJSA7A2uKzrUP6b3WFBd88rMJ9xK2Y24hvc3t\"]},\"lib/account-abstraction/contracts/utils/Exec.sol\":{\"keccak256\":\"0x86b1b1cd11158dddb9d381040c57fdc643c74b5e4eed3e7e036f32452672ad74\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ad88663b6c76df73cf09a272cf333d038df7bb4c51281284b572bf9b46e1cd77\",\"dweb:/ipfs/QmVKxYF8avyPBtqejVhFCM2CuHsfpsCh7TsPqkBLtrgwJQ\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"script/HelperConfig.s.sol\":{\"keccak256\":\"0x8172c7f6e9b47bad77d62773af254c4e980360b8cdbf3f917de7a5265a7805aa\",\"urls\":[\"bzz-raw://62b69f649437d3dbac02666078577d154c9969000d99ab3f307df63b0acdfc94\",\"dweb:/ipfs/QmeXF6kKZD5iK6vRyfDC7PQHniVBnKCLZfiuMQ9Bdb6u7c\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 82:\"script/HelperConfig.s.sol\"\nobject \"HelperConfig_51403\" {\n    code {\n        {\n            /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ not(16711935)), 65537))\n            let memPtr := allocate_memory()\n            mstore(memPtr, 0)\n            mstore(add(memPtr, 32), 0)\n            /// @src 82:1670:1765  \"NetworkConfig({entryPoint: 0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789, account: BURNER_WALLET})\"\n            let expr_mpos := /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ allocate_memory()\n            /// @src 82:613:655  \"0x643315C9Be056cDEA171F4e7b2222a4ddaB9F88D\"\n            mstore(expr_mpos, /** @src 82:1697:1739  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789)\n            /// @src 82:1670:1765  \"NetworkConfig({entryPoint: 0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789, account: BURNER_WALLET})\"\n            let _1 := add(expr_mpos, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 32)\n            /// @src 82:613:655  \"0x643315C9Be056cDEA171F4e7b2222a4ddaB9F88D\"\n            mstore(_1, 0x643315c9be056cdea171f4e7b2222a4ddab9f88d)\n            /// @src 82:466:474  \"11155111\"\n            mstore(/** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 0, /** @src 82:466:474  \"11155111\" */ 0xaa36a7)\n            mstore(/** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 32, /** @src 82:991:1005  \"networkConfigs\" */ 0x0f)\n            /// @src 82:466:474  \"11155111\"\n            let dataSlot := keccak256(/** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 0, 64)\n            /// @src 82:466:474  \"11155111\"\n            let _2 := sub(shl(160, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 1), 1)\n            /// @src 82:466:474  \"11155111\"\n            let _3 := and(mload(expr_mpos), _2)\n            let _4 := not(sub(shl(160, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 1), 1))\n            /// @src 82:466:474  \"11155111\"\n            sstore(dataSlot, or(and(sload(dataSlot), _4), _3))\n            let memberSlot := add(dataSlot, /** @src 18:3166:3170  \"true\" */ 0x01)\n            /// @src 82:466:474  \"11155111\"\n            sstore(memberSlot, or(and(sload(memberSlot), _4), and(mload(_1), _2)))\n            /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n            let _5 := mload(64)\n            let _6 := datasize(\"HelperConfig_51403_deployed\")\n            codecopy(_5, dataoffset(\"HelperConfig_51403_deployed\"), _6)\n            return(_5, _6)\n        }\n        function allocate_memory() -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n    }\n    /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 82:\"script/HelperConfig.s.sol\"\n    object \"HelperConfig_51403_deployed\" {\n        code {\n            {\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x12900da8 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let ret := fun_getOrCreateAnvilEthConfig()\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_struct_NetworkConfig(memPos, ret), memPos))\n                    }\n                    case 0x209c25eb {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let ret_1 := fun_getConfigByChainId(calldataload(4))\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_struct_NetworkConfig(memPos_1, ret_1), memPos_1))\n                    }\n                    case 0x7b99b603 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        mstore(_2, calldataload(4))\n                        mstore(32, /** @src 82:894:957  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ 15)\n                        /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                        let dataSlot := keccak256(_2, _1)\n                        let _3 := sub(shl(160, 1), 1)\n                        let cleaned := and(sload(/** @src 82:894:957  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ dataSlot), /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _3)\n                        let cleaned_1 := and(sload(/** @src 82:894:957  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ add(dataSlot, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 1)), _3)\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_address_address(memPos_2, cleaned, cleaned_1), memPos_2))\n                    }\n                    case 0xa60f7516 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let _4 := sub(shl(160, 1), 1)\n                        let cleaned_2 := and(sload(/** @src 82:848:887  \"NetworkConfig public localNetworkConfig\" */ 13), /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _4)\n                        let cleaned_3 := and(sload(/** @src 82:848:887  \"NetworkConfig public localNetworkConfig\" */ 14), /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _4)\n                        let memPos_3 := mload(_1)\n                        return(memPos_3, sub(abi_encode_address_address(memPos_3, cleaned_2, cleaned_3), memPos_3))\n                    }\n                    case 0xba3ec354 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPtr := mload(_1)\n                        finalize_allocation(memPtr)\n                        mstore(memPtr, _2)\n                        mstore(add(memPtr, 32), _2)\n                        let memPtr_1 := mload(_1)\n                        finalize_allocation(memPtr_1)\n                        mstore(memPtr_1, _2)\n                        mstore(/** @src 82:1876:1939  \"NetworkConfig({entryPoint: address(0), account: BURNER_WALLET})\" */ add(memPtr_1, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 32), /** @src 82:613:655  \"0x643315C9Be056cDEA171F4e7b2222a4ddaB9F88D\" */ 0x643315c9be056cdea171f4e7b2222a4ddab9f88d)\n                        /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                        let memPos_4 := mload(_1)\n                        return(memPos_4, sub(abi_encode_struct_NetworkConfig(memPos_4, memPtr_1), memPos_4))\n                    }\n                    case 0xc28975d1 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPtr_2 := mload(_1)\n                        finalize_allocation(memPtr_2)\n                        mstore(memPtr_2, _2)\n                        mstore(add(memPtr_2, 32), _2)\n                        let memPtr_3 := mload(_1)\n                        finalize_allocation(memPtr_3)\n                        mstore(memPtr_3, /** @src 82:1697:1739  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789)\n                        /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                        mstore(/** @src 82:1670:1765  \"NetworkConfig({entryPoint: 0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789, account: BURNER_WALLET})\" */ add(memPtr_3, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 32), /** @src 82:613:655  \"0x643315C9Be056cDEA171F4e7b2222a4ddaB9F88D\" */ 0x643315c9be056cdea171f4e7b2222a4ddab9f88d)\n                        /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                        let memPos_5 := mload(_1)\n                        return(memPos_5, sub(abi_encode_struct_NetworkConfig(memPos_5, memPtr_3), memPos_5))\n                    }\n                    case 0xc3f909d4 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPtr_4 := mload(_1)\n                        finalize_allocation(memPtr_4)\n                        mstore(memPtr_4, _2)\n                        mstore(add(memPtr_4, 32), _2)\n                        /// @src 82:1137:1177  \"return getConfigByChainId(block.chainid)\"\n                        let var_mpos := /** @src 82:1144:1177  \"getConfigByChainId(block.chainid)\" */ fun_getConfigByChainId(/** @src 82:1163:1176  \"block.chainid\" */ chainid())\n                        /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                        let memPos_6 := mload(_1)\n                        return(memPos_6, sub(abi_encode_struct_NetworkConfig(memPos_6, var_mpos), memPos_6))\n                    }\n                    case 0xf8ccbf47 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value := and(shr(16, sload(/** @src 16:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 0xff)\n                        let memPos_7 := mload(_1)\n                        mstore(memPos_7, iszero(iszero(value)))\n                        return(memPos_7, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_struct_NetworkConfig(headStart, value0) -> tail\n            {\n                tail := add(headStart, 64)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(mload(value0), _1))\n                mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n            }\n            function abi_encode_address_address(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n            }\n            function finalize_allocation(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_1694(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function read_from_storage_reference_type_struct_NetworkConfig() -> value\n            {\n                let memPtr := mload(64)\n                finalize_allocation(memPtr)\n                value := memPtr\n                let _1 := sub(shl(160, 1), 1)\n                mstore(memPtr, and(sload(/** @src 82:2045:2063  \"localNetworkConfig\" */ 0x0d), /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _1))\n                mstore(add(memPtr, 32), and(sload(14), _1))\n            }\n            /// @ast-id 51402 @src 82:1955:2504  \"function getOrCreateAnvilEthConfig() public returns (NetworkConfig memory) {...\"\n            function fun_getOrCreateAnvilEthConfig() -> var__mpos\n            {\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                let _1 := 64\n                let memPtr := mload(_1)\n                finalize_allocation(memPtr)\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                mstore(memPtr, /** @src -1:-1:-1 */ _2)\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                mstore(add(memPtr, 32), /** @src -1:-1:-1 */ _2)\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                let _3 := sload(/** @src 82:2045:2071  \"localNetworkConfig.account\" */ 14)\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                let cleaned := /** @src -1:-1:-1 */ _2\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                let _4 := sub(shl(160, 1), 1)\n                /// @src 82:2041:2139  \"if (localNetworkConfig.account != address(0)) {...\"\n                if /** @src 82:2045:2085  \"localNetworkConfig.account != address(0)\" */ iszero(iszero(/** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ and(_3, _4)))\n                /// @src 82:2041:2139  \"if (localNetworkConfig.account != address(0)) {...\"\n                {\n                    /// @src 82:2102:2127  \"return localNetworkConfig\"\n                    var__mpos := /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ read_from_storage_reference_type_struct_NetworkConfig()\n                    /// @src 82:2102:2127  \"return localNetworkConfig\"\n                    leave\n                }\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                let _5 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                if iszero(extcodesize(/** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _5))\n                /// @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                {\n                    /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                let _6 := /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ mload(_1)\n                /// @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                mstore(_6, /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0x7fec2a8d))\n                let _7 := 0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                mstore(/** @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ add(_6, 4), /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _7)\n                /// @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                let _8 := call(gas(), /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _5, /** @src -1:-1:-1 */ _2, /** @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ _6, /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 36, /** @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ _6, /** @src -1:-1:-1 */ _2)\n                /// @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                if iszero(_8)\n                {\n                    /// @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                    let pos := /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ mload(_1)\n                    /// @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                    returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                if _8\n                {\n                    finalize_allocation_1694(_6)\n                    /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                    cleaned := /** @src -1:-1:-1 */ _2\n                }\n                /// @src 82:2299:2315  \"new EntryPoint()\"\n                let _9 := /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ mload(_1)\n                /// @src 82:2299:2315  \"new EntryPoint()\"\n                let _10 := datasize(\"EntryPoint_2097\")\n                let _11 := add(_9, _10)\n                if or(gt(_11, 0xffffffffffffffff), lt(_11, _9))\n                {\n                    /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                    mstore(/** @src 82:2083:2084  \"0\" */ cleaned, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ 4, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 0x41)\n                    revert(/** @src 82:2083:2084  \"0\" */ cleaned, /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 36)\n                }\n                /// @src 82:2299:2315  \"new EntryPoint()\"\n                datacopy(_9, dataoffset(\"EntryPoint_2097\"), _10)\n                let expr_address := create(/** @src 82:2083:2084  \"0\" */ cleaned, /** @src 82:2299:2315  \"new EntryPoint()\" */ _9, sub(_11, _9))\n                if iszero(expr_address)\n                {\n                    /// @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                    let pos_1 := /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ mload(_1)\n                    /// @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                    returndatacopy(pos_1, /** @src 82:2083:2084  \"0\" */ cleaned, /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 82:2326:2344  \"vm.stopBroadcast()\"\n                if iszero(extcodesize(/** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _5))\n                /// @src 82:2326:2344  \"vm.stopBroadcast()\"\n                {\n                    /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                    revert(/** @src 82:2083:2084  \"0\" */ cleaned, cleaned)\n                }\n                /// @src 82:2326:2344  \"vm.stopBroadcast()\"\n                let _12 := /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ mload(_1)\n                /// @src 82:2326:2344  \"vm.stopBroadcast()\"\n                mstore(_12, /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(225, 0x3b756e9b))\n                /// @src 82:2326:2344  \"vm.stopBroadcast()\"\n                let _13 := call(gas(), /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _5, /** @src 82:2083:2084  \"0\" */ cleaned, /** @src 82:2326:2344  \"vm.stopBroadcast()\" */ _12, /** @src 82:2224:2264  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ 4, /** @src 82:2326:2344  \"vm.stopBroadcast()\" */ _12, /** @src 82:2083:2084  \"0\" */ cleaned)\n                /// @src 82:2326:2344  \"vm.stopBroadcast()\"\n                if iszero(_13)\n                {\n                    /// @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                    let pos_2 := /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ mload(_1)\n                    /// @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                    returndatacopy(pos_2, /** @src 82:2083:2084  \"0\" */ cleaned, /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                    revert(pos_2, returndatasize())\n                }\n                /// @src 82:2326:2344  \"vm.stopBroadcast()\"\n                if _13\n                {\n                    finalize_allocation_1694(_12)\n                    /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                    if cleaned\n                    {\n                        revert(/** @src 82:2083:2084  \"0\" */ cleaned, cleaned)\n                    }\n                }\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                let _14 := and(/** @src 82:2405:2424  \"address(entryPoint)\" */ expr_address, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _4)\n                let memPtr_1 := mload(_1)\n                finalize_allocation(memPtr_1)\n                mstore(memPtr_1, _14)\n                mstore(/** @src 82:2378:2458  \"NetworkConfig({entryPoint: address(entryPoint), account: ANVIL_DEFAULT_ACCOUNT})\" */ add(memPtr_1, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 32), /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _7)\n                let _15 := shl(160, 0xffffffffffffffffffffffff)\n                sstore(/** @src 82:2045:2063  \"localNetworkConfig\" */ 0x0d, /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ or(and(sload(/** @src 82:2045:2063  \"localNetworkConfig\" */ 0x0d), /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _15), /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _14))\n                /// @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                sstore(/** @src 82:2045:2071  \"localNetworkConfig.account\" */ 14, /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ or(and(sload(/** @src 82:2045:2071  \"localNetworkConfig.account\" */ 14), /** @src 82:797:839  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _15), _7))\n                /// @src 82:2471:2496  \"return localNetworkConfig\"\n                var__mpos := /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ read_from_storage_reference_type_struct_NetworkConfig()\n            }\n            /// @ast-id 51326 @src 82:1193:1570  \"function getConfigByChainId(uint256 chainId) public returns (NetworkConfig memory) {...\"\n            function fun_getConfigByChainId(var_chainId) -> var_mpos\n            {\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                let memPtr := mload(64)\n                finalize_allocation(memPtr)\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                mstore(memPtr, /** @src -1:-1:-1 */ _1)\n                /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                mstore(add(memPtr, 32), /** @src -1:-1:-1 */ _1)\n                /// @src 82:1287:1563  \"if (chainId == LOCAL_CHAIN_ID) {...\"\n                switch /** @src 82:1291:1316  \"chainId == LOCAL_CHAIN_ID\" */ eq(var_chainId, /** @src 82:568:573  \"31337\" */ 0x7a69)\n                case /** @src 82:1287:1563  \"if (chainId == LOCAL_CHAIN_ID) {...\" */ 0 {\n                    /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ var_chainId)\n                    mstore(32, /** @src 82:1389:1403  \"networkConfigs\" */ 0x0f)\n                    /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                    let _2 := sub(shl(160, 1), 1)\n                    /// @src 82:1385:1563  \"if (networkConfigs[chainId].account != address(0)) {...\"\n                    switch /** @src 82:1389:1434  \"networkConfigs[chainId].account != address(0)\" */ iszero(iszero(/** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ and(sload(/** @src 82:1389:1420  \"networkConfigs[chainId].account\" */ add(/** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ keccak256(/** @src -1:-1:-1 */ _1, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 64), /** @src 82:1389:1420  \"networkConfigs[chainId].account\" */ 1)), /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _2)))\n                    case /** @src 82:1385:1563  \"if (networkConfigs[chainId].account != address(0)) {...\" */ 0 {\n                        /// @src 82:1521:1551  \"HelperConfig__InvalidChainId()\"\n                        let _3 := /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ mload(64)\n                        /// @src 82:1521:1551  \"HelperConfig__InvalidChainId()\"\n                        mstore(_3, shl(225, 0x64780a77))\n                        revert(_3, 4)\n                    }\n                    default /// @src 82:1385:1563  \"if (networkConfigs[chainId].account != address(0)) {...\"\n                    {\n                        /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ var_chainId)\n                        mstore(32, /** @src 82:1389:1403  \"networkConfigs\" */ 0x0f)\n                        /// @src 82:250:2507  \"contract HelperConfig is Script {...\"\n                        let _4 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ 64)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1)\n                        mstore(memPtr_1, and(sload(_4), _2))\n                        mstore(add(memPtr_1, 32), and(sload(add(_4, /** @src 82:1389:1420  \"networkConfigs[chainId].account\" */ 1)), /** @src 82:250:2507  \"contract HelperConfig is Script {...\" */ _2))\n                        /// @src 82:1451:1481  \"return networkConfigs[chainId]\"\n                        var_mpos := memPtr_1\n                        leave\n                    }\n                }\n                default /// @src 82:1287:1563  \"if (chainId == LOCAL_CHAIN_ID) {...\"\n                {\n                    /// @src 82:1333:1367  \"return getOrCreateAnvilEthConfig()\"\n                    var_mpos := /** @src 82:1340:1367  \"getOrCreateAnvilEthConfig()\" */ fun_getOrCreateAnvilEthConfig()\n                    /// @src 82:1333:1367  \"return getOrCreateAnvilEthConfig()\"\n                    leave\n                }\n            }\n        }\n        /// @use-src 0:\"lib/account-abstraction/contracts/core/EntryPoint.sol\", 2:\"lib/account-abstraction/contracts/core/NonceManager.sol\", 4:\"lib/account-abstraction/contracts/core/StakeManager.sol\", 9:\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\", 10:\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\", 12:\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 77:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\", 78:\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\"\n        object \"EntryPoint_2097\" {\n            code {\n                {\n                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                    let _1 := memoryguard(0xa0)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    /// @src 72:1713:1714  \"1\"\n                    sstore(/** @src 72:1917:1938  \"_status = NOT_ENTERED\" */ 0x02, /** @src 72:1713:1714  \"1\" */ 0x01)\n                    /// @src 0:986:1005  \"new SenderCreator()\"\n                    let _2 := datasize(\"SenderCreator_2414\")\n                    let _3 := add(_1, _2)\n                    if or(gt(_3, sub(shl(64, 1), 1)), lt(_3, _1))\n                    {\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                    }\n                    /// @src 0:986:1005  \"new SenderCreator()\"\n                    datacopy(_1, dataoffset(\"SenderCreator_2414\"), _2)\n                    let expr_address := create(/** @src -1:-1:-1 */ 0, /** @src 0:986:1005  \"new SenderCreator()\" */ _1, sub(_3, _1))\n                    if iszero(expr_address)\n                    {\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let pos := mload(64)\n                        returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 0:986:1005  \"new SenderCreator()\"\n                    mstore(128, expr_address)\n                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                    let _4 := mload(64)\n                    let _5 := datasize(\"EntryPoint_2097_deployed\")\n                    codecopy(_4, dataoffset(\"EntryPoint_2097_deployed\"), _5)\n                    setimmutable(_4, \"35\", mload(/** @src 0:986:1005  \"new SenderCreator()\" */ 128))\n                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                    return(_4, _5)\n                }\n            }\n            /// @use-src 0:\"lib/account-abstraction/contracts/core/EntryPoint.sol\", 1:\"lib/account-abstraction/contracts/core/Helpers.sol\", 2:\"lib/account-abstraction/contracts/core/NonceManager.sol\", 4:\"lib/account-abstraction/contracts/core/StakeManager.sol\", 5:\"lib/account-abstraction/contracts/core/UserOperationLib.sol\", 14:\"lib/account-abstraction/contracts/utils/Exec.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 77:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\"\n            object \"EntryPoint_2097_deployed\" {\n                code {\n                    {\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(64, memoryguard(0x80))\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x0042dc53 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 512) { revert(0, 0) }\n                                let offset := calldataload(4)\n                                let _1 := 0xffffffffffffffff\n                                if gt(offset, _1) { revert(0, 0) }\n                                if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                                let array := abi_decode_available_length_bytes(add(offset, 36), calldataload(add(4, offset)), calldatasize())\n                                let _2 := add(calldatasize(), not(35))\n                                if slt(_2, 0x01c0) { revert(0, 0) }\n                                let memPtr := mload(64)\n                                finalize_allocation_26259(memPtr)\n                                if slt(_2, 0x0140) { revert(0, 0) }\n                                let memPtr_1 := mload(64)\n                                finalize_allocation_26260(memPtr_1)\n                                let value := calldataload(36)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                mstore(memPtr_1, value)\n                                let _3 := 0x20\n                                mstore(add(memPtr_1, _3), calldataload(68))\n                                mstore(add(memPtr_1, 64), calldataload(100))\n                                mstore(add(memPtr_1, 96), calldataload(132))\n                                mstore(add(memPtr_1, 128), calldataload(164))\n                                mstore(add(memPtr_1, 0xa0), calldataload(196))\n                                mstore(add(memPtr_1, 192), calldataload(228))\n                                let value_1 := calldataload(260)\n                                if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                mstore(add(memPtr_1, 224), value_1)\n                                mstore(add(memPtr_1, 256), calldataload(292))\n                                mstore(add(memPtr_1, 288), calldataload(324))\n                                mstore(memPtr, memPtr_1)\n                                mstore(add(memPtr, _3), calldataload(356))\n                                mstore(add(memPtr, 64), calldataload(388))\n                                mstore(add(memPtr, 96), calldataload(420))\n                                mstore(add(memPtr, 128), calldataload(452))\n                                let offset_1 := calldataload(484)\n                                if gt(offset_1, _1) { revert(0, 0) }\n                                let value2, value3 := abi_decode_bytes_calldata(add(4, offset_1), calldatasize())\n                                /// @src 0:11732:11741  \"gasleft()\"\n                                let expr := gas()\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if iszero(/** @src 0:11759:11786  \"msg.sender == address(this)\" */ eq(/** @src 0:11759:11769  \"msg.sender\" */ caller(), /** @src 0:11781:11785  \"this\" */ address()))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                {\n                                    let memPtr_2 := mload(64)\n                                    mstore(memPtr_2, shl(229, 4594637))\n                                    mstore(add(memPtr_2, 4), _3)\n                                    mstore(add(memPtr_2, 36), 23)\n                                    mstore(add(memPtr_2, 68), \"AA92 internal call only\")\n                                    revert(memPtr_2, 100)\n                                }\n                                /// @src 0:11854:11868  \"opInfo.mUserOp\"\n                                let _mpos := mload(memPtr)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _4 := mload(/** @src 0:11902:11922  \"mUserOp.callGasLimit\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 96))\n                                let r := shr(6, mul(/** @src 0:12058:12067  \"gasleft()\" */ gas(), /** @src 0:12070:12072  \"63\" */ 0x3f))\n                                /// @src 0:12037:12368  \"if (...\"\n                                if /** @src 0:12058:12195  \"gasleft() * 63 / 64 <...\" */ lt(r, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(add(_4, mload(/** @src 0:12127:12158  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0))), /** @src 0:1297:1302  \"10000\" */ 0x2710))\n                                /// @src 0:12037:12368  \"if (...\"\n                                {\n                                    /// @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\"\n                                    mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeaddead))\n                                    revert(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, _3)\n                                }\n                                /// @src 0:12388:12450  \"IPaymaster.PostOpMode mode = IPaymaster.PostOpMode.opSucceeded\"\n                                let var_mode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:12464:12479  \"callData.length\"\n                                let expr_1 := /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12464:12479  \"callData.length\" */ array)\n                                /// @src 0:12460:13044  \"if (callData.length > 0) {...\"\n                                if /** @src 0:12464:12483  \"callData.length > 0\" */ iszero(iszero(expr_1))\n                                /// @src 0:12460:13044  \"if (callData.length > 0) {...\"\n                                {\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12524:12538  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                    /// @src 0:12580:13034  \"if (!success) {...\"\n                                    if /** @src 0:12584:12592  \"!success\" */ iszero(/** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ call(_4, cleaned, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ add(array, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), /** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0))\n                                    /// @src 0:12580:13034  \"if (!success) {...\"\n                                    {\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$len := returndatasize()\n                                        /// @src 0:1543:1547  \"2048\"\n                                        let _5 := 0x0800\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _5)\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        {\n                                            usr$len := /** @src 0:1543:1547  \"2048\" */ _5\n                                        }\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$ptr := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        mstore(usr$ptr, usr$len)\n                                        returndatacopy(add(usr$ptr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                        /// @src 0:12693:12963  \"if (result.length > 0) {...\"\n                                        if /** @src 0:12697:12714  \"result.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12697:12710  \"result.length\" */ usr$ptr)))\n                                        /// @src 0:12693:12963  \"if (result.length > 0) {...\"\n                                        {\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _6 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr, _3))\n                                            let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12837:12851  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            let _7 := mload(/** @src 0:12877:12890  \"mUserOp.nonce\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                            /// @src 0:12743:12944  \"UserOperationRevertReason(...\"\n                                            let _8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                            mstore(_8, _7)\n                                            /// @src 0:1543:1547  \"2048\"\n                                            mstore(add(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), 64)\n                                            /// @src 0:12743:12944  \"UserOperationRevertReason(...\"\n                                            log3(_8, sub(/** @src 0:1543:1547  \"2048\" */ abi_encode_bytes(usr$ptr, add(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)), /** @src 0:12743:12944  \"UserOperationRevertReason(...\" */ _8), 0x1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201, _6, cleaned_1)\n                                        }\n                                        /// @src 0:12980:13019  \"mode = IPaymaster.PostOpMode.opReverted\"\n                                        var_mode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1\n                                    }\n                                }\n                                /// @src 0:1543:1547  \"2048\"\n                                let diff := sub(expr, /** @src 0:13107:13116  \"gasleft()\" */ gas())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _9 := add(diff, mload(add(memPtr, 128)))\n                                /// @src 0:1543:1547  \"2048\"\n                                let _10 := abi_decode_available_length_bytes(/** @src 0:13155:13203  \"_postExecution(mode, opInfo, context, actualGas)\" */ value2, value3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldatasize())\n                                /// @src 0:13155:13203  \"_postExecution(mode, opInfo, context, actualGas)\"\n                                let var_actualGas := _9\n                                let var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:26799:26808  \"gasleft()\"\n                                let expr_2 := gas()\n                                /// @src 0:26842:26863  \"address refundAddress\"\n                                let var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:26842:26863  \"address refundAddress\"\n                                let var_refundAddress_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:26907:26921  \"opInfo.mUserOp\"\n                                let _mpos_1 := mload(memPtr)\n                                /// @src 0:26954:26980  \"getUserOpGasPrice(mUserOp)\"\n                                let expr_3 := fun_getUserOpGasPrice(_mpos_1)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let cleaned_2 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27015:27032  \"mUserOp.paymaster\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 224)), sub(shl(160, 1), 1))\n                                /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                switch /** @src 0:27050:27073  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                case /** @src 0:27046:27885  \"if (paymaster == address(0)) {...\" */ 0 {\n                                    /// @src 0:27162:27187  \"refundAddress = paymaster\"\n                                    var_refundAddress := cleaned_2\n                                    /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                    if /** @src 0:27209:27227  \"context.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27209:27223  \"context.length\" */ _10)))\n                                    /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if iszero(lt(var_mode, 3))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x21)\n                                            revert(0, 36)\n                                        }\n                                        /// @src 0:27309:27853  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                                        if /** @src 0:27313:27357  \"mode != IPaymaster.PostOpMode.postOpReverted\" */ iszero(eq(var_mode, /** @src 0:27321:27357  \"IPaymaster.PostOpMode.postOpReverted\" */ 2))\n                                        /// @src 0:27309:27853  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                                        {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _11 := mload(/** @src 0:27452:27483  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0))\n                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                            if iszero(extcodesize(cleaned_2))\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                revert(0, 0)\n                                            }\n                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                            let _12 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                            mstore(_12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x7c627b21))\n                                            mstore(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ add(_12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_mode)\n                                            mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 128)\n                                            let tail := abi_encode_bytes(_10, add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132))\n                                            mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), mul(/** @src 0:27267:27287  \"actualGas * gasPrice\" */ _9, expr_3))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), expr_3)\n                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                            let trySuccessCondition := call(_11, cleaned_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, sub(tail, _12), _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                            if trySuccessCondition\n                                            {\n                                                finalize_allocation_26283(_12)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                var_refundAddress_1 := 0\n                                            }\n                                            /// @src 0:27385:27831  \"try IPaymaster(paymaster).postOp{...\"\n                                            switch iszero(trySuccessCondition)\n                                            case 0 { }\n                                            default {\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                let usr$len_1 := returndatasize()\n                                                /// @src 0:1543:1547  \"2048\"\n                                                let _13 := 0x0800\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                if gt(usr$len_1, /** @src 0:1543:1547  \"2048\" */ _13)\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                {\n                                                    usr$len_1 := /** @src 0:1543:1547  \"2048\" */ _13\n                                                }\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                let usr$ptr_1 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr_1, usr$len_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(usr$ptr_1, usr$len_1)\n                                                returndatacopy(add(usr$ptr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), /** @src -1:-1:-1 */ var_refundAddress_1, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len_1)\n                                                /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                mstore(_14, shl(226, 0x2b5e552f))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:27782:27804  \"PostOpReverted(reason)\" */ add(_14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), _3)\n                                                /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                revert(_14, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr_1, add(/** @src 0:27782:27804  \"PostOpReverted(reason)\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:27782:27804  \"PostOpReverted(reason)\" */ _14))\n                                            }\n                                        }\n                                    }\n                                }\n                                default /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                {\n                                    /// @src 0:27093:27123  \"refundAddress = mUserOp.sender\"\n                                    var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27109:27123  \"mUserOp.sender\" */ _mpos_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                }\n                                /// @src 0:27898:27929  \"actualGas += preGas - gasleft()\"\n                                var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(_9, /** @src 0:1543:1547  \"2048\" */ sub(expr_2, /** @src 0:27920:27929  \"gasleft()\" */ gas()))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _15 := mload(/** @src 0:28052:28072  \"mUserOp.callGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 96))\n                                let sum := add(_15, mload(/** @src 0:28075:28106  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0)))\n                                /// @src 0:1543:1547  \"2048\"\n                                let diff_1 := sub(var_actualGas, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(add(memPtr, 128)))\n                                /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                if /** @src 0:28316:28352  \"executionGasLimit > executionGasUsed\" */ gt(sum, diff_1)\n                                /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                {\n                                    /// @src 0:28538:28567  \"actualGas += unusedGasPenalty\"\n                                    var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, div(mul(/** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:28396:28432  \"executionGasLimit - executionGasUsed\" */ sum, diff_1), /** @src 0:1596:1598  \"10\" */ 0x0a), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100))\n                                }\n                                /// @src 0:28614:28650  \"actualGasCost = actualGas * gasPrice\"\n                                var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mul(/** @src 0:28630:28650  \"actualGas * gasPrice\" */ var_actualGas, expr_3)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _16 := mload(add(memPtr, 64))\n                                /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                switch /** @src 0:28714:28737  \"prefund < actualGasCost\" */ lt(_16, var_actualGasCost)\n                                case /** @src 0:28710:29503  \"if (prefund < actualGasCost) {...\" */ 0 {\n                                    /// @src 0:29291:29331  \"_incrementDeposit(refundAddress, refund)\"\n                                    pop(fun_incrementDeposit(var_refundAddress, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:29250:29273  \"prefund - actualGasCost\" */ _16, var_actualGasCost)))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    if iszero(lt(var_mode, 3))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x21)\n                                        revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                    }\n                                    /// @src 0:1543:1547  \"2048\"\n                                    let _17 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr, _3))\n                                    /// @src 0:6324:6338  \"opInfo.mUserOp\"\n                                    let _mpos_2 := mload(memPtr)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let cleaned_3 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6324:6345  \"opInfo.mUserOp.sender\" */ _mpos_2), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                    let cleaned_4 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6359:6383  \"opInfo.mUserOp.paymaster\" */ add(_mpos_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 224)), sub(shl(160, 1), 1))\n                                    let _18 := mload(/** @src 0:6397:6417  \"opInfo.mUserOp.nonce\" */ add(_mpos_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                    /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                    let _19 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                    mstore(_19, _18)\n                                    mstore(add(_19, _3), /** @src 0:29364:29405  \"mode == IPaymaster.PostOpMode.opSucceeded\" */ iszero(var_mode))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(_19, 64), var_actualGasCost)\n                                    mstore(add(_19, 96), var_actualGas)\n                                    /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                    log4(_19, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 128, /** @src 0:6261:6498  \"UserOperationEvent(...\" */ 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _17, cleaned_3, cleaned_4)\n                                }\n                                default /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                {\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    if iszero(lt(var_mode, 3))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x21)\n                                        revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                    }\n                                    /// @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\"\n                                    switch /** @src 0:28761:28805  \"mode == IPaymaster.PostOpMode.postOpReverted\" */ eq(var_mode, /** @src 0:28769:28805  \"IPaymaster.PostOpMode.postOpReverted\" */ 2)\n                                    case /** @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\" */ 0 {\n                                        /// @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\"\n                                        mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeadaa51))\n                                        revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3)\n                                    }\n                                    default /// @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\"\n                                    {\n                                        /// @src 0:28829:28852  \"actualGasCost = prefund\"\n                                        var_actualGasCost := _16\n                                        /// @src 0:28892:28898  \"opInfo\"\n                                        fun_emitPrefundTooLow(memPtr)\n                                        /// @src 0:28974:28983  \"actualGas\"\n                                        fun_emitUserOperationEvent(memPtr, _16, var_actualGas)\n                                    }\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let memPos := mload(64)\n                                mstore(memPos, var_actualGasCost)\n                                return(memPos, _3)\n                            }\n                            case 0x01ffc9a7 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value_2 := calldataload(4)\n                                let _20 := and(value_2, shl(224, 0xffffffff))\n                                if iszero(eq(value_2, _20)) { revert(0, 0) }\n                                /// @src 0:1860:2034  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                let expr_4 := /** @src 0:1860:1974  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId)\" */ eq(_20, /** @src 0:1876:1973  \"type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId\" */ shl(225, 0x307e35b7))\n                                /// @src 0:1860:2034  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                if iszero(expr_4)\n                                {\n                                    expr_4 := /** @src 0:1990:2034  \"interfaceId == type(IEntryPoint).interfaceId\" */ eq(_20, /** @src 0:1876:1905  \"type(IEntryPoint).interfaceId\" */ shl(227, 0x122a0e9b))\n                                }\n                                /// @src 0:1860:2096  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                let expr_5 := expr_4\n                                if iszero(expr_4)\n                                {\n                                    expr_5 := /** @src 0:2050:2096  \"interfaceId == type(IStakeManager).interfaceId\" */ eq(_20, /** @src 0:1908:1939  \"type(IStakeManager).interfaceId\" */ shl(224, 0xcf28ef97))\n                                }\n                                /// @src 0:1860:2158  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                let expr_6 := expr_5\n                                if iszero(expr_5)\n                                {\n                                    expr_6 := /** @src 0:2112:2158  \"interfaceId == type(INonceManager).interfaceId\" */ eq(_20, /** @src 0:1942:1973  \"type(INonceManager).interfaceId\" */ shl(224, 0x3e84f021))\n                                }\n                                /// @src 0:1860:2210  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                let expr_7 := expr_6\n                                if iszero(expr_6)\n                                {\n                                    expr_7 := /** @src 77:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_20, /** @src 77:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, iszero(iszero(expr_7)))\n                                return(memPos_1, 32)\n                            }\n                            case 0x0396cb60 {\n                                let _21 := 32\n                                if slt(add(calldatasize(), not(3)), _21) { revert(0, 0) }\n                                let value_3 := calldataload(4)\n                                let _22 := 0xffffffff\n                                let _23 := and(value_3, _22)\n                                if iszero(eq(value_3, _23)) { revert(0, 0) }\n                                mstore(0, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(_21, 0)\n                                let dataSlot := keccak256(0, 64)\n                                if /** @src 4:2457:2476  \"unstakeDelaySec > 0\" */ iszero(_23)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                {\n                                    let memPtr_3 := mload(64)\n                                    mstore(memPtr_3, shl(229, 4594637))\n                                    mstore(add(memPtr_3, 4), _21)\n                                    mstore(add(memPtr_3, 36), 26)\n                                    mstore(add(memPtr_3, 68), \"must specify unstake delay\")\n                                    revert(memPtr_3, 100)\n                                }\n                                let _24 := sload(/** @src 4:2557:2577  \"info.unstakeDelaySec\" */ add(dataSlot, 1))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if /** @src 4:2538:2577  \"unstakeDelaySec >= info.unstakeDelaySec\" */ lt(_23, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(120, _24), _22))\n                                {\n                                    let memPtr_4 := mload(64)\n                                    mstore(memPtr_4, shl(229, 4594637))\n                                    mstore(add(memPtr_4, 4), _21)\n                                    mstore(add(memPtr_4, 36), 28)\n                                    mstore(add(memPtr_4, 68), \"cannot decrease unstake time\")\n                                    revert(memPtr_4, 100)\n                                }\n                                let _25 := 0xffffffffffffffffffffffffffff\n                                /// @src 4:2657:2679  \"info.stake + msg.value\"\n                                let expr_8 := checked_add_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(8, _24), _25), /** @src 4:2670:2679  \"msg.value\" */ callvalue())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if /** @src 4:2697:2706  \"stake > 0\" */ iszero(expr_8)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                {\n                                    let memPtr_5 := mload(64)\n                                    mstore(memPtr_5, shl(229, 4594637))\n                                    mstore(add(memPtr_5, 4), _21)\n                                    mstore(add(memPtr_5, 36), 18)\n                                    mstore(add(memPtr_5, 68), \"no stake specified\")\n                                    revert(memPtr_5, 100)\n                                }\n                                if /** @src 4:2747:2773  \"stake <= type(uint112).max\" */ gt(expr_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _25)\n                                {\n                                    let memPtr_6 := mload(64)\n                                    mstore(memPtr_6, shl(229, 4594637))\n                                    mstore(add(memPtr_6, 4), _21)\n                                    mstore(add(memPtr_6, 36), 14)\n                                    mstore(add(memPtr_6, 68), \"stake overflow\")\n                                    revert(memPtr_6, 100)\n                                }\n                                let _26 := sload(/** @src 4:2850:2862  \"info.deposit\" */ dataSlot)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let memPtr_7 := mload(64)\n                                finalize_allocation_26259(memPtr_7)\n                                mstore(memPtr_7, _26)\n                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                let _27 := add(memPtr_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _21)\n                                mstore(_27, /** @src 4:2557:2577  \"info.unstakeDelaySec\" */ 1)\n                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                let _28 := add(memPtr_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                mstore(_28, and(/** @src 4:2894:2908  \"uint112(stake)\" */ expr_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _25))\n                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                let _29 := add(memPtr_7, 96)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(_29, _23)\n                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                let _30 := add(memPtr_7, 128)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(_30, 0)\n                                mstore(0, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(_21, 0)\n                                let dataSlot_1 := keccak256(0, 64)\n                                sstore(dataSlot_1, mload(memPtr_7))\n                                let memberSlot := add(dataSlot_1, /** @src 4:2557:2577  \"info.unstakeDelaySec\" */ 1)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _31 := iszero(iszero(mload(_27)))\n                                let _32 := sload(memberSlot)\n                                let _33 := and(shl(8, mload(_28)), 0xffffffffffffffffffffffffffff00)\n                                sstore(memberSlot, or(or(_33, or(and(_32, shl(152, 0xffffffffffffffffffffffffff)), and(_31, 255))), and(shl(120, mload(_29)), shl(120, 0xffffffff))))\n                                update_storage_value_offsett_uint48_to_uint48(memberSlot, and(mload(_30), 0xffffffffffff))\n                                /// @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                                let _34 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                mstore(_34, expr_8)\n                                mstore(add(_34, _21), _23)\n                                /// @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                                log2(_34, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\" */ 0xa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                return(0, 0)\n                            }\n                            case 0x0bd28e3b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value_4 := calldataload(4)\n                                let _35 := and(value_4, sub(shl(192, 1), 1))\n                                if iszero(eq(value_4, _35)) { revert(0, 0) }\n                                mstore(0, /** @src 2:913:923  \"msg.sender\" */ caller())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(32, /** @src 2:893:912  \"nonceSequenceNumber\" */ 0x01)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _36 := keccak256(0, 64)\n                                mstore(0, _35)\n                                mstore(32, _36)\n                                let dataSlot_2 := keccak256(0, 64)\n                                sstore(dataSlot_2, /** @src 2:893:931  \"nonceSequenceNumber[msg.sender][key]++\" */ increment_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 2:893:931  \"nonceSequenceNumber[msg.sender][key]++\" */ dataSlot_2)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                return(0, 0)\n                            }\n                            case 0x1b2e01b8 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0 := abi_decode_address()\n                                let value1 := abi_decode_uint192()\n                                mstore(0, and(value0, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 2:279:353  \"mapping(address => mapping(uint192 => uint256)) public nonceSequenceNumber\" */ 1)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _37 := keccak256(0, 64)\n                                mstore(0, and(value1, sub(shl(192, 1), 1)))\n                                mstore(32, _37)\n                                let _38 := sload(keccak256(0, 64))\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, _38)\n                                return(memPos_2, 32)\n                            }\n                            case 0x205c2878 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_1 := abi_decode_address()\n                                let value_5 := calldataload(36)\n                                mstore(0, /** @src 4:4805:4815  \"msg.sender\" */ caller())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(32, 0)\n                                let dataSlot_3 := keccak256(0, 64)\n                                let _39 := sload(/** @src 4:4852:4864  \"info.deposit\" */ dataSlot_3)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if /** @src 4:4834:4864  \"withdrawAmount <= info.deposit\" */ gt(value_5, _39)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                {\n                                    let memPtr_8 := mload(64)\n                                    mstore(memPtr_8, shl(229, 4594637))\n                                    mstore(add(memPtr_8, 4), 32)\n                                    mstore(add(memPtr_8, 36), 25)\n                                    mstore(add(memPtr_8, 68), \"Withdraw amount too large\")\n                                    revert(memPtr_8, 100)\n                                }\n                                sstore(dataSlot_3, /** @src 4:4919:4948  \"info.deposit - withdrawAmount\" */ checked_sub_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _39, /** @src 4:4919:4948  \"info.deposit - withdrawAmount\" */ value_5))\n                                /// @src 4:4963:5017  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                                let _40 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                /// @src 4:4963:5017  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                                log2(_40, sub(abi_encode_address_payable_uint256(_40, value0_1, value_5), _40), 0xd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb, /** @src 4:4805:4815  \"msg.sender\" */ caller())\n                                /// @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                                let expr_component := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:5045:5065  \"withdrawAddress.call\" */ value0_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), /** @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\" */ value_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, 0, 0)\n                                /// @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                                pop(extract_returndata())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if iszero(expr_component)\n                                {\n                                    let memPtr_9 := mload(64)\n                                    mstore(memPtr_9, shl(229, 4594637))\n                                    mstore(add(memPtr_9, 4), 32)\n                                    mstore(add(memPtr_9, 36), 18)\n                                    mstore(add(memPtr_9, 68), \"failed to withdraw\")\n                                    revert(memPtr_9, 100)\n                                }\n                                return(0, 0)\n                            }\n                            case 0x22cdde4c {\n                                if callvalue() { revert(0, 0) }\n                                let _41 := not(3)\n                                if slt(add(calldatasize(), _41), 32) { revert(0, 0) }\n                                let offset_2 := calldataload(4)\n                                if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                                if slt(add(sub(calldatasize(), offset_2), _41), 288) { revert(0, 0) }\n                                let ret := fun_getUserOpHash(add(4, offset_2))\n                                let memPos_3 := mload(64)\n                                mstore(memPos_3, ret)\n                                return(memPos_3, 32)\n                            }\n                            case 0x35567e1a {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_2 := abi_decode_address()\n                                let value1_1 := abi_decode_uint192()\n                                mstore(0, and(value0_2, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 2:507:526  \"nonceSequenceNumber\" */ 0x01)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _42 := keccak256(0, 64)\n                                mstore(0, and(value1_1, sub(shl(192, 1), 1)))\n                                mstore(32, _42)\n                                let _43 := sload(keccak256(0, 64))\n                                let memPos_4 := mload(64)\n                                mstore(memPos_4, /** @src 2:507:562  \"nonceSequenceNumber[sender][key] | (uint256(key) << 64)\" */ or(_43, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shl(64, /** @src 2:543:555  \"uint256(key)\" */ value1_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(0xffffffffffffffff))))\n                                return(memPos_4, 32)\n                            }\n                            case 0x5287ce12 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0_3 := abi_decode_address()\n                                let memPtr_10 := mload(64)\n                                finalize_allocation_26259(memPtr_10)\n                                mstore(memPtr_10, 0)\n                                mstore(add(memPtr_10, 32), 0)\n                                mstore(add(memPtr_10, 64), 0)\n                                mstore(add(memPtr_10, 96), 0)\n                                mstore(add(memPtr_10, 128), 0)\n                                mstore(0, and(value0_3, sub(shl(160, 1), 1)))\n                                mstore(32, 0)\n                                let dataSlot_4 := keccak256(0, 64)\n                                let memPtr_11 := mload(64)\n                                finalize_allocation_26259(memPtr_11)\n                                let _44 := sload(dataSlot_4)\n                                mstore(memPtr_11, _44)\n                                let _45 := sload(add(dataSlot_4, 1))\n                                let _46 := add(memPtr_11, 32)\n                                mstore(_46, iszero(iszero(and(_45, 0xff))))\n                                let _47 := 0xffffffffffffffffffffffffffff\n                                let _48 := add(memPtr_11, 64)\n                                mstore(_48, and(shr(8, _45), _47))\n                                let _49 := 0xffffffff\n                                let _50 := add(memPtr_11, 96)\n                                mstore(_50, and(shr(120, _45), _49))\n                                let _51 := 0xffffffffffff\n                                let _52 := add(memPtr_11, 128)\n                                mstore(_52, and(shr(152, _45), _51))\n                                let memPos_5 := mload(64)\n                                mstore(memPos_5, _44)\n                                mstore(add(memPos_5, 32), iszero(iszero(mload(_46))))\n                                mstore(add(memPos_5, 64), and(mload(_48), _47))\n                                mstore(add(memPos_5, 96), and(mload(_50), _49))\n                                mstore(add(memPos_5, 128), and(mload(_52), _51))\n                                return(memPos_5, 160)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, 0)\n                                let _53 := sload(keccak256(0, 64))\n                                let memPos_6 := mload(64)\n                                mstore(memPos_6, _53)\n                                return(memPos_6, 32)\n                            }\n                            case 0x765e827f {\n                                if callvalue() { revert(0, 0) }\n                                let param, param_1, param_2 := abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                                /// @src 72:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 0:6980:7004  \"new UserOpInfo[](opslen)\"\n                                let expr_mpos := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(param_1)\n                                /// @src 0:7044:7057  \"uint256 i = 0\"\n                                let var_i := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:7039:7520  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                for { }\n                                /** @src 0:7059:7069  \"i < opslen\" */ lt(var_i, param_1)\n                                /// @src 0:7044:7057  \"uint256 i = 0\"\n                                {\n                                    /// @src 0:7071:7074  \"i++\"\n                                    var_i := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:7071:7074  \"i++\" */ var_i, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                }\n                                /// @src 0:7071:7074  \"i++\"\n                                {\n                                    /// @src 0:7260:7298  \"_validatePrepayment(i, ops[i], opInfo)\"\n                                    let expr_component_1, expr_component_2 := fun_validatePrepayment(var_i, /** @src 0:7283:7289  \"ops[i]\" */ calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(param, param_1, var_i), /** @src 0:7121:7131  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i)))\n                                    /// @src 0:21736:21792  \"_getValidationData(...\"\n                                    let expr_component_3, expr_component_4 := fun_getValidationData(expr_component_1)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _54 := sub(shl(160, 1), 1)\n                                    /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                    if /** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ expr_component_3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _54)))\n                                    /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                    {\n                                        /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                        let _55 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                        mstore(_55, shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ add(_55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                        mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                        mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                        mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA24 signature error\")\n                                        /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                        revert(_55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    /// @src 0:21922:22018  \"if (outOfTimeRange) {...\"\n                                    if expr_component_4\n                                    {\n                                        /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                        let _56 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                        mstore(_56, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ add(_56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                        mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                        mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                        mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA22 expired or not due\")\n                                        /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                        revert(_56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    /// @src 0:22320:22385  \"_getValidationData(...\"\n                                    let expr_component_5, expr_component_6 := fun_getValidationData(expr_component_2)\n                                    /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                    if /** @src 0:22399:22425  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:22399:22425  \"pmAggregator != address(0)\" */ expr_component_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _54)))\n                                    /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                    {\n                                        /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                        let _57 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                        mstore(_57, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ add(_57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                        mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                        mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                        mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA34 signature error\")\n                                        /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                        revert(_57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    /// @src 0:22509:22615  \"if (outOfTimeRange) {...\"\n                                    if expr_component_6\n                                    {\n                                        /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                        let _58 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                        mstore(_58, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ add(_58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 33)\n                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA32 paymaster expired or not du\")\n                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"e\")\n                                        /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                        revert(_58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                    }\n                                }\n                                /// @src 0:7534:7555  \"uint256 collected = 0\"\n                                let var_collected := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:7574:7591  \"BeforeExecution()\"\n                                log1(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:7574:7591  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                                /// @src 0:7611:7624  \"uint256 i = 0\"\n                                let var_i_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:7606:7726  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                for { }\n                                /** @src 0:7626:7636  \"i < opslen\" */ lt(var_i_1, param_1)\n                                /// @src 0:7611:7624  \"uint256 i = 0\"\n                                {\n                                    /// @src 0:7638:7641  \"i++\"\n                                    var_i_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:7638:7641  \"i++\" */ var_i_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                }\n                                /// @src 0:7638:7641  \"i++\"\n                                {\n                                    /// @src 0:7692:7698  \"ops[i]\"\n                                    let expr_offset := calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(param, param_1, var_i_1)\n                                    /// @src 0:7661:7711  \"collected += _executeUserOp(i, ops[i], opInfos[i])\"\n                                    var_collected := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_collected, /** @src 0:7674:7711  \"_executeUserOp(i, ops[i], opInfos[i])\" */ fun_executeUserOp(var_i_1, expr_offset, /** @src 0:7700:7710  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i_1))))\n                                }\n                                /// @src 0:7765:7774  \"collected\"\n                                fun_compensate(param_2, var_collected)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                sstore(/** @src 72:2924:2945  \"_status = NOT_ENTERED\" */ 0x02, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                return(0, 0)\n                            }\n                            case 0x850aaf62 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_4 := abi_decode_address()\n                                let offset_3 := calldataload(36)\n                                if gt(offset_3, 0xffffffffffffffff) { revert(0, 0) }\n                                let value1_2, value2_1 := abi_decode_bytes_calldata(add(4, offset_3), calldatasize())\n                                /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                let _59 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                calldatacopy(_59, value1_2, value2_1)\n                                let _60 := add(_59, value2_1)\n                                mstore(_60, 0)\n                                /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                let expr_component_7 := delegatecall(gas(), value0_4, _59, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _60, /** @src 0:31052:31077  \"target.delegatecall(data)\" */ _59), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0)\n                                /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                let expr_component_mpos := extract_returndata()\n                                /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                let _61 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                mstore(_61, shl(226, 0x26504155))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ add(_61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), iszero(iszero(expr_component_7)))\n                                mstore(add(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                revert(_61, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(expr_component_mpos, add(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68)), /** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61))\n                            }\n                            case /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x9b249f69 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let offset_4 := calldataload(4)\n                                if gt(offset_4, 0xffffffffffffffff) { revert(0, 0) }\n                                let value0_5, value1_3 := abi_decode_bytes_calldata(add(4, offset_4), calldatasize())\n                                let _62 := sub(shl(160, 1), 1)\n                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                let _63 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                mstore(_63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(225, 0x2b870d1b))\n                                mstore(/** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ add(_63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), 32)\n                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                let _64 := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1100:1114  \"_senderCreator\" */ loadimmutable(\"35\"), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _62), 0, /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(value0_5, value1_3, add(/** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63), _63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32)\n                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                if iszero(_64)\n                                {\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let pos := mload(64)\n                                    returndatacopy(pos, 0, returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                let expr_9 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                if _64\n                                {\n                                    let _65 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32\n                                    /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                    if gt(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32, /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ returndatasize()) { _65 := returndatasize() }\n                                    finalize_allocation(_63, _65)\n                                    expr_9 := abi_decode_address_fromMemory(_63, add(_63, _65))\n                                }\n                                /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                let _66 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                mstore(_66, shl(225, 0x3653dc03))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:16922:16949  \"SenderAddressResult(sender)\" */ add(_66, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), and(expr_9, _62))\n                                /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                revert(_66, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                            }\n                            case 0xb760faf9 {\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                fun_depositTo(abi_decode_address())\n                                return(0, 0)\n                            }\n                            case 0xbb9fe6bf {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                mstore(0, /** @src 4:3248:3258  \"msg.sender\" */ caller())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(0x20, 0)\n                                /// @src 4:3277:3297  \"info.unstakeDelaySec\"\n                                let _67 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ keccak256(0, 64), /** @src 4:3277:3297  \"info.unstakeDelaySec\" */ 1)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _68 := sload(/** @src 4:3277:3297  \"info.unstakeDelaySec\" */ _67)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let value_6 := and(shr(120, _68), 0xffffffff)\n                                if /** @src 4:3277:3302  \"info.unstakeDelaySec != 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_6)\n                                {\n                                    let memPtr_12 := mload(64)\n                                    mstore(memPtr_12, shl(229, 4594637))\n                                    mstore(add(memPtr_12, 4), 0x20)\n                                    mstore(add(memPtr_12, 36), 10)\n                                    mstore(add(memPtr_12, 68), \"not staked\")\n                                    revert(memPtr_12, 100)\n                                }\n                                if iszero(and(_68, 0xff))\n                                {\n                                    let memPtr_13 := mload(64)\n                                    mstore(memPtr_13, shl(229, 4594637))\n                                    mstore(add(memPtr_13, 4), 0x20)\n                                    mstore(add(memPtr_13, 36), 17)\n                                    mstore(add(memPtr_13, 68), \"already unstaking\")\n                                    revert(memPtr_13, 100)\n                                }\n                                let _69 := 0xffffffffffff\n                                let sum_1 := add(and(/** @src 4:3407:3422  \"block.timestamp\" */ timestamp(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _69), value_6)\n                                if gt(sum_1, _69)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                                /// @src 4:3456:3488  \"info.withdrawTime = withdrawTime\"\n                                update_storage_value_offsett_uint48_to_uint48(_67, sum_1)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                sstore(_67, and(sload(_67), not(255)))\n                                /// @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                                let _70 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                mstore(_70, and(sum_1, _69))\n                                /// @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                                log2(_70, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x20, /** @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\" */ 0xfa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a, /** @src 4:3248:3258  \"msg.sender\" */ caller())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                return(0, 0)\n                            }\n                            case 0xc23a5cea {\n                                if callvalue() { revert(0, 0) }\n                                let _71 := 32\n                                if slt(add(calldatasize(), not(3)), _71) { revert(0, 0) }\n                                let value0_6 := abi_decode_address()\n                                mstore(0, /** @src 4:3897:3907  \"msg.sender\" */ caller())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(_71, 0)\n                                /// @src 4:3934:3944  \"info.stake\"\n                                let _72 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ keccak256(0, 64), /** @src 4:3934:3944  \"info.stake\" */ 1)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _73 := sload(/** @src 4:3934:3944  \"info.stake\" */ _72)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let value_7 := and(shr(8, _73), 0xffffffffffffffffffffffffffff)\n                                if /** @src 4:3962:3971  \"stake > 0\" */ iszero(value_7)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                {\n                                    let memPtr_14 := mload(64)\n                                    mstore(memPtr_14, shl(229, 4594637))\n                                    mstore(add(memPtr_14, 4), _71)\n                                    mstore(add(memPtr_14, 36), 20)\n                                    mstore(add(memPtr_14, 68), \"No stake to withdraw\")\n                                    revert(memPtr_14, 100)\n                                }\n                                let value_8 := and(shr(152, _73), 0xffffffffffff)\n                                if /** @src 4:4014:4035  \"info.withdrawTime > 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_8)\n                                {\n                                    let memPtr_15 := mload(64)\n                                    mstore(memPtr_15, shl(229, 4594637))\n                                    mstore(add(memPtr_15, 4), _71)\n                                    mstore(add(memPtr_15, 36), 29)\n                                    mstore(add(memPtr_15, 68), \"must call unlockStake() first\")\n                                    revert(memPtr_15, 100)\n                                }\n                                if /** @src 4:4100:4136  \"info.withdrawTime <= block.timestamp\" */ gt(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_8, /** @src 4:4121:4136  \"block.timestamp\" */ timestamp())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                {\n                                    let memPtr_16 := mload(64)\n                                    mstore(memPtr_16, shl(229, 4594637))\n                                    mstore(add(memPtr_16, 4), _71)\n                                    mstore(add(memPtr_16, 36), 27)\n                                    mstore(add(memPtr_16, 68), \"Stake withdrawal is not due\")\n                                    revert(memPtr_16, 100)\n                                }\n                                sstore(_72, and(_73, not(sub(shl(200, 1), 256))))\n                                /// @src 4:4293:4343  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                                let _74 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                /// @src 4:4293:4343  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                                log2(_74, sub(abi_encode_address_payable_uint256(_74, value0_6, value_7), _74), 0xb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3, /** @src 4:3897:3907  \"msg.sender\" */ caller())\n                                /// @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                                let expr_component_8 := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:4371:4391  \"withdrawAddress.call\" */ value0_6, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), /** @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\" */ value_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, 0, 0)\n                                /// @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                                pop(extract_returndata())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if iszero(expr_component_8)\n                                {\n                                    let memPtr_17 := mload(64)\n                                    mstore(memPtr_17, shl(229, 4594637))\n                                    mstore(add(memPtr_17, 4), _71)\n                                    mstore(add(memPtr_17, 36), 24)\n                                    mstore(add(memPtr_17, 68), \"failed to withdraw stake\")\n                                    revert(memPtr_17, 100)\n                                }\n                                return(0, 0)\n                            }\n                            case 0xdbed18e0 {\n                                if callvalue() { revert(0, 0) }\n                                let param_3, param_4, param_5 := abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                                /// @src 72:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 0:8042:8062  \"uint256 totalOps = 0\"\n                                let var_totalOps := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:8077:8090  \"uint256 i = 0\"\n                                let var_i_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:8072:8839  \"for (uint256 i = 0; i < opasLen; i++) {...\"\n                                for { }\n                                /** @src 0:8092:8103  \"i < opasLen\" */ lt(var_i_2, param_4)\n                                /// @src 0:8077:8090  \"uint256 i = 0\"\n                                {\n                                    /// @src 0:8105:8108  \"i++\"\n                                    var_i_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:8105:8108  \"i++\" */ var_i_2, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                }\n                                /// @src 0:8105:8108  \"i++\"\n                                {\n                                    /// @src 0:8160:8179  \"opsPerAggregator[i]\"\n                                    let expr_offset_1 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_i_2)\n                                    /// @src 0:8230:8241  \"opa.userOps\"\n                                    let expr_offset_2, expr_length := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_1, expr_offset_1)\n                                    /// @src 0:8280:8294  \"opa.aggregator\"\n                                    let _75 := 32\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _76 := and(/** @src 0:8280:8294  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset_1, _75)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                    /// @src 0:8429:8430  \"1\"\n                                    let _77 := 0x01\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    if /** @src 0:8398:8431  \"address(aggregator) != address(1)\" */ eq(_76, /** @src 0:8429:8430  \"1\" */ _77)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    {\n                                        let memPtr_18 := mload(64)\n                                        mstore(memPtr_18, shl(229, 4594637))\n                                        mstore(add(memPtr_18, 4), /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(memPtr_18, 36), 23)\n                                        mstore(add(memPtr_18, 68), \"AA96 invalid aggregator\")\n                                        revert(memPtr_18, 100)\n                                    }\n                                    /// @src 0:8503:8792  \"if (address(aggregator) != address(0)) {...\"\n                                    if /** @src 0:8507:8540  \"address(aggregator) != address(0)\" */ iszero(iszero(_76))\n                                    /// @src 0:8503:8792  \"if (address(aggregator) != address(0)) {...\"\n                                    {\n                                        /// @src 0:8660:8673  \"opa.signature\"\n                                        let expr_offset_3, expr_length_1 := access_calldata_tail_bytes_calldata(expr_offset_1, add(expr_offset_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64))\n                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                        if iszero(extcodesize(_76))\n                                        {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            revert(0, 0)\n                                        }\n                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                        let _78 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                        mstore(_78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x2dd81133))\n                                        let tail_1 := add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68)\n                                        mstore(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ add(_78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), 64)\n                                        let pos_1 := tail_1\n                                        mstore(tail_1, expr_length)\n                                        let _79 := 100\n                                        pos_1 := add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _79)\n                                        let tail_2 := add(add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(5, expr_length)), _79)\n                                        let srcPtr := expr_offset_2\n                                        let i := 0\n                                        for { }\n                                        lt(i, expr_length)\n                                        {\n                                            i := add(i, /** @src 0:8429:8430  \"1\" */ _77)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            mstore(pos_1, add(sub(tail_2, /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(99)))\n                                            let rel_offset_of_tail := calldataload(srcPtr)\n                                            if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), expr_offset_2), not(286)))) { revert(0, 0) }\n                                            tail_2 := abi_encode_struct_PackedUserOperation_calldata(add(rel_offset_of_tail, expr_offset_2), tail_2)\n                                            srcPtr := add(srcPtr, /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            pos_1 := add(pos_1, /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), add(sub(tail_2, /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(3)))\n                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                        let trySuccessCondition_1 := staticcall(gas(), _76, _78, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(expr_offset_3, expr_length_1, tail_2), /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                        if trySuccessCondition_1\n                                        {\n                                            finalize_allocation_26283(_78)\n                                        }\n                                        /// @src 0:8621:8778  \"try aggregator.validateSignatures(ops, opa.signature) {} catch {...\"\n                                        switch iszero(trySuccessCondition_1)\n                                        case 0 { }\n                                        default {\n                                            /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                            let _80 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                            /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                            mstore(_80, shl(228, 0x086a9f75))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\" */ add(_80, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), _76)\n                                            /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                            revert(_80, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                        }\n                                    }\n                                    /// @src 0:8806:8828  \"totalOps += ops.length\"\n                                    var_totalOps := checked_add_uint256(var_totalOps, /** @src 0:8818:8828  \"ops.length\" */ expr_length)\n                                }\n                                /// @src 0:8879:8905  \"new UserOpInfo[](totalOps)\"\n                                let expr_mpos_1 := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(var_totalOps)\n                                /// @src 0:8916:8935  \"uint256 opIndex = 0\"\n                                let var_opIndex := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:8950:8963  \"uint256 a = 0\"\n                                let var_a := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:8945:9776  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                                for { }\n                                /** @src 0:8965:8976  \"a < opasLen\" */ lt(var_a, param_4)\n                                /// @src 0:8950:8963  \"uint256 a = 0\"\n                                {\n                                    /// @src 0:8978:8981  \"a++\"\n                                    var_a := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:8978:8981  \"a++\" */ var_a, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                }\n                                /// @src 0:8978:8981  \"a++\"\n                                {\n                                    /// @src 0:9033:9052  \"opsPerAggregator[a]\"\n                                    let expr_offset_4 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_a)\n                                    /// @src 0:9103:9114  \"opa.userOps\"\n                                    let expr_offset_5, expr_length_2 := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_4, expr_offset_4)\n                                    /// @src 0:9153:9167  \"opa.aggregator\"\n                                    let expr_address := read_from_calldatat_contract_IAggregator(add(expr_offset_4, /** @src 0:8280:8294  \"opa.aggregator\" */ 32))\n                                    /// @src 0:9228:9241  \"uint256 i = 0\"\n                                    let var_i_3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    let _81 := sub(shl(160, 1), 1)\n                                    let _82 := and(/** @src 0:9687:9706  \"address(aggregator)\" */ expr_address, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)\n                                    /// @src 0:9223:9766  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                    for { }\n                                    /** @src 0:9243:9253  \"i < opslen\" */ lt(var_i_3, expr_length_2)\n                                    /// @src 0:9228:9241  \"uint256 i = 0\"\n                                    {\n                                        /// @src 0:9255:9258  \"i++\"\n                                        var_i_3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:9255:9258  \"i++\" */ var_i_3, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                    }\n                                    /// @src 0:9255:9258  \"i++\"\n                                    {\n                                        /// @src 0:9457:9501  \"_validatePrepayment(opIndex, ops[i], opInfo)\"\n                                        let expr_component_9, expr_component_10 := fun_validatePrepayment(var_opIndex, /** @src 0:9486:9492  \"ops[i]\" */ calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_5, expr_length_2, var_i_3), /** @src 0:9305:9321  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos_1, var_opIndex)))\n                                        /// @src 0:21736:21792  \"_getValidationData(...\"\n                                        let expr_component_11, expr_component_12 := fun_getValidationData(expr_component_9)\n                                        /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                        if /** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ iszero(eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _82, and(/** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ expr_component_11, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)))\n                                        /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                        {\n                                            /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                            let _83 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                            /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                            mstore(_83, shl(225, 0x1101335b))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ add(_83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                            mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                            mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                            mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA24 signature error\")\n                                            /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                            revert(_83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                        }\n                                        /// @src 0:21922:22018  \"if (outOfTimeRange) {...\"\n                                        if expr_component_12\n                                        {\n                                            /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                            let _84 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                            /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                            mstore(_84, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ add(_84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                            mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                            mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                            mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA22 expired or not due\")\n                                            /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                            revert(_84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                        }\n                                        /// @src 0:22320:22385  \"_getValidationData(...\"\n                                        let expr_component_13, expr_component_14 := fun_getValidationData(expr_component_10)\n                                        /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                        if /** @src 0:22399:22425  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:22399:22425  \"pmAggregator != address(0)\" */ expr_component_13, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)))\n                                        /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                        {\n                                            /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                            let _85 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                            /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                            mstore(_85, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ add(_85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                            mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                            mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                            mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA34 signature error\")\n                                            /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                            revert(_85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                        }\n                                        /// @src 0:22509:22615  \"if (outOfTimeRange) {...\"\n                                        if expr_component_14\n                                        {\n                                            /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                            let _86 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                            /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                            mstore(_86, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ add(_86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 33)\n                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA32 paymaster expired or not du\")\n                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"e\")\n                                            /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                            revert(_86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                        }\n                                        /// @src 0:9742:9751  \"opIndex++\"\n                                        var_opIndex := increment_uint256(var_opIndex)\n                                    }\n                                }\n                                /// @src 0:9791:9808  \"BeforeExecution()\"\n                                log1(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9791:9808  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                                /// @src 0:9850:9861  \"opIndex = 0\"\n                                var_opIndex := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:9819:9840  \"uint256 collected = 0\"\n                                let var_collected_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:9876:9889  \"uint256 a = 0\"\n                                let var_a_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:9871:10335  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                                for { }\n                                /** @src 0:9891:9902  \"a < opasLen\" */ lt(var_a_1, param_4)\n                                /// @src 0:9876:9889  \"uint256 a = 0\"\n                                {\n                                    /// @src 0:9904:9907  \"a++\"\n                                    var_a_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:9904:9907  \"a++\" */ var_a_1, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                }\n                                /// @src 0:9904:9907  \"a++\"\n                                {\n                                    /// @src 0:9959:9978  \"opsPerAggregator[a]\"\n                                    let expr_offset_6 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_a_1)\n                                    /// @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\"\n                                    log2(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:10032:10046  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset_6, /** @src 0:8280:8294  \"opa.aggregator\" */ 32)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                                    /// @src 0:10099:10110  \"opa.userOps\"\n                                    let expr_offset_7, expr_length_3 := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_6, expr_offset_6)\n                                    /// @src 0:10171:10184  \"uint256 i = 0\"\n                                    let var_i_4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:10166:10325  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                    for { }\n                                    /** @src 0:10186:10196  \"i < opslen\" */ lt(var_i_4, expr_length_3)\n                                    /// @src 0:10171:10184  \"uint256 i = 0\"\n                                    {\n                                        /// @src 0:10198:10201  \"i++\"\n                                        var_i_4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:10198:10201  \"i++\" */ var_i_4, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                    }\n                                    /// @src 0:10198:10201  \"i++\"\n                                    {\n                                        /// @src 0:10258:10264  \"ops[i]\"\n                                        let expr_offset_8 := calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_7, expr_length_3, var_i_4)\n                                        /// @src 0:10221:10283  \"collected += _executeUserOp(opIndex, ops[i], opInfos[opIndex])\"\n                                        var_collected_1 := checked_add_uint256(var_collected_1, /** @src 0:10234:10283  \"_executeUserOp(opIndex, ops[i], opInfos[opIndex])\" */ fun_executeUserOp(var_opIndex, expr_offset_8, /** @src 0:10266:10282  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos_1, var_opIndex))))\n                                        /// @src 0:10301:10310  \"opIndex++\"\n                                        var_opIndex := increment_uint256(var_opIndex)\n                                    }\n                                }\n                                /// @src 0:10349:10387  \"SignatureAggregatorChanged(address(0))\"\n                                log2(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                /// @src 0:10423:10432  \"collected\"\n                                fun_compensate(param_5, var_collected_1)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                sstore(/** @src 72:2924:2945  \"_status = NOT_ENTERED\" */ 0x02, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                return(0, 0)\n                            }\n                            case 0xfc7e286d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, 0)\n                                let dataSlot_5 := keccak256(0, 64)\n                                let _87 := sload(/** @src 4:507:554  \"mapping(address => DepositInfo) public deposits\" */ dataSlot_5)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _88 := sload(/** @src 4:507:554  \"mapping(address => DepositInfo) public deposits\" */ add(dataSlot_5, 1))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let memPos_7 := mload(64)\n                                mstore(memPos_7, _87)\n                                mstore(add(memPos_7, 32), iszero(iszero(and(_88, 0xff))))\n                                mstore(add(memPos_7, 64), and(shr(8, _88), 0xffffffffffffffffffffffffffff))\n                                mstore(add(memPos_7, 96), and(shr(120, _88), 0xffffffff))\n                                mstore(add(memPos_7, 128), and(shr(152, _88), 0xffffffffffff))\n                                return(memPos_7, 160)\n                            }\n                        }\n                        if iszero(calldatasize())\n                        {\n                            /// @src 4:1326:1336  \"msg.sender\"\n                            fun_depositTo(caller())\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            stop()\n                        }\n                        revert(0, 0)\n                    }\n                    function finalize_allocation_26259(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 0xa0)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_26260(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 0x0140)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_26283(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, memPtr)\n                    }\n                    function finalize_allocation_26350(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 96)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function array_allocation_size_bytes(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        size := add(and(add(length, 31), not(31)), 0x20)\n                    }\n                    function abi_decode_available_length_bytes(src, length, end) -> array\n                    {\n                        let _1 := array_allocation_size_bytes(length)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _1)\n                        array := memPtr\n                        mstore(memPtr, length)\n                        if gt(add(src, length), end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        calldatacopy(add(memPtr, 0x20), src, length)\n                        mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        length := calldataload(offset)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        arrayPos := add(offset, 0x20)\n                        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n                    }\n                    function abi_decode_uint192() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(192, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(dataEnd) -> value0, value1, value2\n                    {\n                        if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        let _1 := 0xffffffffffffffff\n                        if gt(offset, _1) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), dataEnd))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let length := calldataload(add(4, offset))\n                        if gt(length, _1)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        if gt(add(add(offset, shl(5, length)), 36), dataEnd)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        value0 := add(offset, 36)\n                        value1 := length\n                        let value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        value2 := value\n                    }\n                    /// @src 0:1543:1547  \"2048\"\n                    function copy_memory_to_memory_with_cleanup(src, dst, length)\n                    {\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 32) }\n                        {\n                            mstore(add(dst, i), mload(add(src, i)))\n                        }\n                        mstore(add(dst, length), 0)\n                    }\n                    function abi_encode_bytes(value, pos) -> end\n                    {\n                        let length := /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:1543:1547  \"2048\" */ value)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(pos, length)\n                        /// @src 0:1543:1547  \"2048\"\n                        copy_memory_to_memory_with_cleanup(add(value, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x20), add(pos, 0x20), /** @src 0:1543:1547  \"2048\" */ length)\n                        end := add(add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ pos, and(add(/** @src 0:1543:1547  \"2048\" */ length, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 31), not(31))), 0x20)\n                    }\n                    function checked_add_uint256(x, y) -> sum\n                    {\n                        sum := add(x, y)\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function update_storage_value_offsett_uint48_to_uint48(slot, value)\n                    {\n                        let _1 := sload(slot)\n                        sstore(slot, or(and(_1, not(shl(152, 0xffffffffffff))), and(shl(152, value), shl(152, 0xffffffffffff))))\n                    }\n                    function increment_uint256(value) -> ret\n                    {\n                        if eq(value, not(0))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        ret := add(value, 1)\n                    }\n                    function checked_sub_uint256(x, y) -> diff\n                    {\n                        diff := sub(x, y)\n                        if gt(diff, x)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function abi_encode_address_payable_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                    }\n                    function extract_returndata() -> data\n                    {\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _1 := returndatasize()\n                            let _2 := array_allocation_size_bytes(_1)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _2)\n                            mstore(memPtr, _1)\n                            data := memPtr\n                            returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ returndatasize())\n                        }\n                    }\n                    /// @ast-id 968 @src 0:13258:13464  \"function getUserOpHash(...\"\n                    function fun_getUserOpHash(var_userOp_947_offset) -> var\n                    {\n                        /// @src 5:1998:2013  \"userOp.initCode\"\n                        let _1 := 64\n                        let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, _1))\n                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                        let usr$mem := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                        calldatacopy(usr$mem, expr_offset, expr_length)\n                        let var_ret := keccak256(usr$mem, expr_length)\n                        /// @src 5:2062:2077  \"userOp.callData\"\n                        let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, 96))\n                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                        let usr$mem_1 := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                        calldatacopy(usr$mem_1, expr_offset_1, expr_length_1)\n                        let var_ret_1 := keccak256(usr$mem_1, expr_length_1)\n                        /// @src 5:2300:2323  \"userOp.paymasterAndData\"\n                        let expr_offset_2, expr_length_2 := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, 224))\n                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                        let usr$mem_2 := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                        calldatacopy(usr$mem_2, expr_offset_2, expr_length_2)\n                        let var_ret_2 := keccak256(usr$mem_2, expr_length_2)\n                        /// @src 5:2342:2522  \"abi.encode(...\"\n                        let expr_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                        /// @src 5:2342:2522  \"abi.encode(...\"\n                        let _2 := add(expr_mpos, /** @src 5:1938:1950  \"userOp.nonce\" */ 32)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(_2, and(/** @src 5:823:884  \"assembly {...\" */ calldataload(/** @src 5:1895:1912  \"getSender(userOp)\" */ var_userOp_947_offset), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:1998:2013  \"userOp.initCode\" */ _1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:1938:1950  \"userOp.nonce\" */ add(var_userOp_947_offset, 32)))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2062:2077  \"userOp.callData\" */ 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_ret)\n                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2115:2138  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_ret_1)\n                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2177:2202  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2115:2138  \"userOp.accountGasLimits\" */ add(var_userOp_947_offset, 128)))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2230:2244  \"userOp.gasFees\" */ 192), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2177:2202  \"userOp.preVerificationGas\" */ add(var_userOp_947_offset, 160)))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2300:2323  \"userOp.paymasterAndData\" */ 224), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2230:2244  \"userOp.gasFees\" */ add(var_userOp_947_offset, 192)))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _3 := 256\n                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), var_ret_2)\n                        /// @src 5:2342:2522  \"abi.encode(...\"\n                        mstore(expr_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3)\n                        let newFreePtr := add(expr_mpos, 288)\n                        let _4 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _4), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 5:1998:2013  \"userOp.initCode\" */ _1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ newFreePtr)\n                        /// @src 5:4955:4987  \"return keccak256(encode(userOp))\"\n                        let var_1 := /** @src 5:4962:4987  \"keccak256(encode(userOp))\" */ keccak256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 5:4962:4987  \"keccak256(encode(userOp))\" */ expr_mpos))\n                        /// @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                        let _5 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ expr_mpos, /** @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\" */ 320)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(_5, var_1)\n                        mstore(add(expr_mpos, 352), /** @src 0:13435:13439  \"this\" */ address())\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(add(expr_mpos, 384), /** @src 0:13442:13455  \"block.chainid\" */ chainid())\n                        /// @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                        mstore(newFreePtr, /** @src 5:2062:2077  \"userOp.callData\" */ 96)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let newFreePtr_1 := add(expr_mpos, 416)\n                        if or(gt(newFreePtr_1, _4), lt(newFreePtr_1, newFreePtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 5:1998:2013  \"userOp.initCode\" */ _1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ newFreePtr_1)\n                        /// @src 0:13372:13457  \"return...\"\n                        var := /** @src 0:13391:13457  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ keccak256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _5, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:13391:13457  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ newFreePtr))\n                    }\n                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                    function array_allocation_size_array_struct_UserOpInfo_dyn(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        size := add(shl(5, length), 0x20)\n                    }\n                    function allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(length) -> memPtr\n                    {\n                        let _1 := array_allocation_size_array_struct_UserOpInfo_dyn(length)\n                        let _2 := 64\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _1)\n                        mstore(memPtr_1, length)\n                        memPtr := memPtr_1\n                        let _3 := add(array_allocation_size_array_struct_UserOpInfo_dyn(length), not(31))\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        for { } lt(i, _3) { i := add(i, 32) }\n                        {\n                            let memPtr_2 := mload(_2)\n                            finalize_allocation_26259(memPtr_2)\n                            let memPtr_3 := mload(_2)\n                            finalize_allocation_26260(memPtr_3)\n                            mstore(memPtr_3, /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let _4 := 32\n                            mstore(add(memPtr_3, _4), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(memPtr_3, _2), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let _5 := 96\n                            mstore(add(memPtr_3, _5), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let _6 := 128\n                            mstore(add(memPtr_3, _6), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(memPtr_3, 160), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(memPtr_3, 192), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(memPtr_3, 224), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(memPtr_3, 256), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(memPtr_3, 288), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(memPtr_2, memPtr_3)\n                            mstore(add(memPtr_2, _4), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(memPtr_2, _2), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(memPtr_2, _5), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(memPtr_2, _6), /** @src -1:-1:-1 */ 0)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(add(memPtr_1, i), _4), memPtr_2)\n                        }\n                    }\n                    function memory_array_index_access_struct_UserOpInfo_dyn(baseRef, index) -> addr\n                    {\n                        if iszero(lt(index, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ baseRef)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        addr := add(add(baseRef, shl(5, index)), 32)\n                    }\n                    function calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(base_ref, length, index) -> addr\n                    {\n                        if iszero(lt(index, length))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(286))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        addr := add(base_ref, rel_offset_of_tail)\n                    }\n                    function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        value0 := value\n                    }\n                    function abi_encode_bytes_calldata(start, length, pos) -> end\n                    {\n                        mstore(pos, length)\n                        calldatacopy(add(pos, 0x20), start, length)\n                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                    }\n                    /// @ast-id 2547 @src 4:1935:2114  \"function depositTo(address account) public virtual payable {...\"\n                    function fun_depositTo(var_account)\n                    {\n                        /// @src 4:2025:2062  \"_incrementDeposit(account, msg.value)\"\n                        let expr := fun_incrementDeposit(var_account, /** @src 4:2052:2061  \"msg.value\" */ callvalue())\n                        /// @src 4:2077:2107  \"Deposited(account, newDeposit)\"\n                        let _1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                        mstore(_1, expr)\n                        /// @src 4:2077:2107  \"Deposited(account, newDeposit)\"\n                        log2(_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32, /** @src 4:2077:2107  \"Deposited(account, newDeposit)\" */ 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:2077:2107  \"Deposited(account, newDeposit)\" */ var_account, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                    }\n                    function calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(base_ref, length, index) -> addr\n                    {\n                        if iszero(lt(index, length))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(94))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        addr := add(base_ref, rel_offset_of_tail)\n                    }\n                    function access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(base_ref, ptr_to_tail) -> addr, length\n                    {\n                        let rel_offset_of_tail := calldataload(ptr_to_tail)\n                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                        let addr_1 := add(base_ref, rel_offset_of_tail)\n                        length := calldataload(addr_1)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        addr := add(addr_1, 0x20)\n                        if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n                    }\n                    function read_from_calldatat_contract_IAggregator(ptr) -> returnValue\n                    {\n                        let value := calldataload(ptr)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        returnValue := value\n                    }\n                    function access_calldata_tail_bytes_calldata(base_ref, ptr_to_tail) -> addr, length\n                    {\n                        let rel_offset_of_tail := calldataload(ptr_to_tail)\n                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                        let addr_1 := add(base_ref, rel_offset_of_tail)\n                        length := calldataload(addr_1)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        addr := add(addr_1, 0x20)\n                        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n                    }\n                    function calldata_access_bytes_calldata(base_ref, ptr) -> value, length\n                    {\n                        let rel_offset_of_tail := calldataload(ptr)\n                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                        let value_1 := add(rel_offset_of_tail, base_ref)\n                        length := calldataload(value_1)\n                        value := add(value_1, 0x20)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        if sgt(value, sub(calldatasize(), length)) { revert(0, 0) }\n                    }\n                    function abi_encode_struct_PackedUserOperation_calldata(value, pos) -> end\n                    {\n                        let _1 := 0x0120\n                        let value_1 := calldataload(value)\n                        let _2 := and(value_1, sub(shl(160, 1), 1))\n                        if iszero(eq(value_1, _2))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(pos, _2)\n                        mstore(add(pos, 0x20), calldataload(add(value, 0x20)))\n                        let memberValue0, memberValue1 := calldata_access_bytes_calldata(value, add(value, 0x40))\n                        mstore(add(pos, 0x40), _1)\n                        let tail := abi_encode_bytes_calldata(memberValue0, memberValue1, add(pos, _1))\n                        let memberValue0_1, memberValue1_1 := calldata_access_bytes_calldata(value, add(value, 0x60))\n                        mstore(add(pos, 0x60), sub(tail, pos))\n                        let tail_1 := abi_encode_bytes_calldata(memberValue0_1, memberValue1_1, tail)\n                        mstore(add(pos, 0x80), calldataload(add(value, 0x80)))\n                        mstore(add(pos, 0xa0), calldataload(add(value, 0xa0)))\n                        mstore(add(pos, 0xc0), calldataload(add(value, 0xc0)))\n                        let memberValue0_2, memberValue1_2 := calldata_access_bytes_calldata(value, add(value, 0xe0))\n                        mstore(add(pos, 0xe0), sub(tail_1, pos))\n                        let tail_2 := abi_encode_bytes_calldata(memberValue0_2, memberValue1_2, tail_1)\n                        let _3 := 0x0100\n                        let memberValue0_3, memberValue1_3 := calldata_access_bytes_calldata(value, add(value, _3))\n                        mstore(add(pos, _3), sub(tail_2, pos))\n                        end := abi_encode_bytes_calldata(memberValue0_3, memberValue1_3, tail_2)\n                    }\n                    /// @ast-id 48912 @src 72:2431:2738  \"function _nonReentrantBefore() private {...\"\n                    function fun_nonReentrantBefore()\n                    {\n                        /// @src 72:2554:2640  \"if (_status == ENTERED) {...\"\n                        if /** @src 72:2558:2576  \"_status == ENTERED\" */ eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 72:2558:2565  \"_status\" */ 0x02), 0x02)\n                        /// @src 72:2554:2640  \"if (_status == ENTERED) {...\"\n                        {\n                            /// @src 72:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            let _1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                            /// @src 72:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            mstore(_1, shl(224, 0x3ee5aeb5))\n                            revert(_1, 4)\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        sstore(/** @src 72:2558:2565  \"_status\" */ 0x02, 0x02)\n                    }\n                    /// @ast-id 1795 @src 0:23805:25958  \"function _validatePrepayment(...\"\n                    function fun_validatePrepayment(var_opIndex, var_userOp_1628_offset, var_outOpInfo_mpos) -> var_validationData, var_paymasterValidationData\n                    {\n                        /// @src 0:24005:24036  \"uint256 paymasterValidationData\"\n                        var_paymasterValidationData := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                        /// @src 0:24069:24078  \"gasleft()\"\n                        let expr := gas()\n                        /// @src 0:24118:24135  \"outOpInfo.mUserOp\"\n                        let _431_mpos := mload(var_outOpInfo_mpos)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let value := calldataload(var_userOp_1628_offset)\n                        let _1 := and(value, sub(shl(160, 1), 1))\n                        if iszero(eq(value, _1)) { revert(0, 0) }\n                        mstore(_431_mpos, _1)\n                        mstore(/** @src 0:13835:13848  \"mUserOp.nonce\" */ add(_431_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:13851:13863  \"userOp.nonce\" */ add(var_userOp_1628_offset, 32)))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _2 := calldataload(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ add(var_userOp_1628_offset, 128))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _3 := 0xffffffffffffffffffffffffffffffff\n                        mstore(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 5:2694:2709  \"uint256(packed)\" */ _2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                        mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:2668:2683  \"bytes16(packed)\" */ _2))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:14020:14045  \"userOp.preVerificationGas\" */ add(var_userOp_1628_offset, 160)))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _4 := calldataload(/** @src 0:14139:14153  \"userOp.gasFees\" */ add(var_userOp_1628_offset, /** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ 192))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 5:2694:2709  \"uint256(packed)\" */ _4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                        mstore(/** @src 0:14056:14084  \"mUserOp.maxPriorityFeePerGas\" */ add(_431_mpos, 288), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:2668:2683  \"bytes16(packed)\" */ _4))\n                        /// @src 0:14198:14221  \"userOp.paymasterAndData\"\n                        let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_1628_offset, add(var_userOp_1628_offset, 224))\n                        /// @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\"\n                        switch /** @src 0:14235:14262  \"paymasterAndData.length > 0\" */ iszero(iszero(expr_length))\n                        case /** @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\" */ 0 {\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(/** @src 0:14632:14649  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                            mstore(/** @src 0:14676:14713  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                            mstore(/** @src 0:14731:14762  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                        }\n                        default /// @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\"\n                        {\n                            /// @src 5:490:492  \"52\"\n                            if /** @src 0:14303:14368  \"paymasterAndData.length >= UserOperationLib.PAYMASTER_DATA_OFFSET\" */ lt(expr_length, /** @src 5:490:492  \"52\" */ 0x34)\n                            {\n                                let memPtr := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 5:490:492  \"52\"\n                                mstore(memPtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(229, 4594637))\n                                /// @src 5:490:492  \"52\"\n                                mstore(add(memPtr, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 5:490:492  \"52\" */ add(memPtr, 36), 29)\n                                mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 5:490:492  \"52\" */ memPtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 5:490:492  \"52\" */ \"AA93 invalid paymasterAndData\")\n                                revert(memPtr, 100)\n                            }\n                            /// @src 5:372:374  \"20\"\n                            if gt(0x14, expr_length)\n                            {\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 5:372:374  \"20\"\n                            if gt(/** @src 5:434:436  \"36\" */ 0x24, /** @src 5:372:374  \"20\" */ expr_length)\n                            {\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 5:372:374  \"20\"\n                            if gt(/** @src 5:490:492  \"52\" */ 0x34, /** @src 5:372:374  \"20\" */ expr_length)\n                            {\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                revert(0, 0)\n                            }\n                            mstore(/** @src 0:14504:14535  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:434:436  \"36\" */ calldataload(/** @src 5:372:374  \"20\" */ add(expr_offset, /** @src 5:434:436  \"36\" */ 0x24))))\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(/** @src 0:14465:14502  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:434:436  \"36\" */ calldataload(/** @src 5:372:374  \"20\" */ add(expr_offset, 0x14))))\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(/** @src 0:14446:14463  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224), /** @src 5:372:374  \"20\" */ shr(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96, /** @src 5:372:374  \"20\" */ calldataload(/** @src 5:4451:4511  \"bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])\" */ expr_offset)))\n                        }\n                        /// @src 0:24214:24235  \"getUserOpHash(userOp)\"\n                        let _5 := fun_getUserOpHash(var_userOp_1628_offset)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _5)\n                        let _6 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64))\n                        /// @src 0:24491:24552  \"mUserOp.preVerificationGas |...\"\n                        let expr_1 := or(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192)), /** @src 0:24491:24552  \"mUserOp.preVerificationGas |...\" */ _6)\n                        /// @src 0:24491:24587  \"mUserOp.preVerificationGas |...\"\n                        let expr_2 := or(expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96)))\n                        /// @src 0:24491:24639  \"mUserOp.preVerificationGas |...\"\n                        let expr_3 := or(expr_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:24602:24639  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128)))\n                        /// @src 0:24491:24685  \"mUserOp.preVerificationGas |...\"\n                        let expr_4 := or(expr_3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:24654:24685  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)))\n                        /// @src 0:24491:24720  \"mUserOp.preVerificationGas |...\"\n                        let expr_5 := or(expr_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256)))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        if /** @src 0:24781:24814  \"maxGasValues <= type(uint120).max\" */ gt(/** @src 0:24491:24763  \"mUserOp.preVerificationGas |...\" */ or(expr_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:14056:14084  \"mUserOp.maxPriorityFeePerGas\" */ add(_431_mpos, 288))), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xffffffffffffffffffffffffffffff)\n                        {\n                            let memPtr_1 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(memPtr_1, 36), 24)\n                            mstore(add(memPtr_1, 68), \"AA94 gas values overflow\")\n                            revert(memPtr_1, 100)\n                        }\n                        let _7 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let sum := add(_7, mload(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96)))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let sum_1 := add(sum, mload(/** @src 0:24602:24639  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128)))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let sum_2 := add(sum_1, mload(/** @src 0:24654:24685  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let sum_3 := add(sum_2, mload(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192)))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let product := mul(sum_3, mload(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256)))\n                        /// @src 0:24935:25098  \"_validateAccountPrepayment(...\"\n                        let var_validationData_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                        /// @src 0:17742:17756  \"opInfo.mUserOp\"\n                        let _mpos := mload(var_outOpInfo_mpos)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:17787:17801  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:17854:17865  \"op.initCode\"\n                        let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(var_userOp_1628_offset, add(var_userOp_1628_offset, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                        /// @src 0:15806:16738  \"if (initCode.length != 0) {...\"\n                        if /** @src 0:15810:15830  \"initCode.length != 0\" */ iszero(iszero(expr_length_1))\n                        /// @src 0:15806:16738  \"if (initCode.length != 0) {...\"\n                        {\n                            /// @src 0:15898:16002  \"if (sender.code.length != 0)...\"\n                            if /** @src 0:15902:15925  \"sender.code.length != 0\" */ iszero(iszero(/** @src 0:15902:15920  \"sender.code.length\" */ extcodesize(cleaned)))\n                            /// @src 0:15898:16002  \"if (sender.code.length != 0)...\"\n                            {\n                                /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                let _8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                mstore(_8, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ add(_8, 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 31)\n                                mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA10 sender already constructed\")\n                                /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                revert(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                            }\n                            let _9 := mload(/** @src 0:16085:16120  \"opInfo.mUserOp.verificationGasLimit\" */ add(/** @src 0:16085:16099  \"opInfo.mUserOp\" */ mload(var_outOpInfo_mpos), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                            let _10 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                            mstore(_10, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(225, 0x2b870d1b))\n                            mstore(/** @src 0:16034:16144  \"senderCreator().createSender{...\" */ add(_10, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                            let _11 := call(_9, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1100:1114  \"_senderCreator\" */ loadimmutable(\"35\"), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), 0, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(expr_offset_1, expr_length_1, add(/** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10), _10, /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                            if iszero(_11)\n                            {\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let pos := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                returndatacopy(pos, 0, returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                            let expr_6 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                            if _11\n                            {\n                                let _12 := /** @src 0:13851:13863  \"userOp.nonce\" */ 32\n                                /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                if gt(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ returndatasize()) { _12 := returndatasize() }\n                                finalize_allocation(_10, _12)\n                                expr_6 := abi_decode_address_fromMemory(_10, add(_10, _12))\n                            }\n                            /// @src 0:16162:16183  \"sender1 == address(0)\"\n                            let _13 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:16162:16183  \"sender1 == address(0)\" */ expr_6, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                            /// @src 0:16158:16256  \"if (sender1 == address(0))...\"\n                            if /** @src 0:16162:16183  \"sender1 == address(0)\" */ iszero(_13)\n                            /// @src 0:16158:16256  \"if (sender1 == address(0))...\"\n                            {\n                                /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                mstore(_14, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ add(_14, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 27)\n                                mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA13 initCode failed or OOG\")\n                                /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                revert(_14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                            }\n                            /// @src 0:16270:16369  \"if (sender1 != sender)...\"\n                            if /** @src 0:16274:16291  \"sender1 != sender\" */ iszero(eq(_13, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned))\n                            /// @src 0:16270:16369  \"if (sender1 != sender)...\"\n                            {\n                                /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                let _15 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                mstore(_15, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ add(_15, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA14 initCode must return sender\")\n                                /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                revert(_15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                            }\n                            /// @src 0:16383:16489  \"if (sender1.code.length == 0)...\"\n                            if /** @src 0:16387:16411  \"sender1.code.length == 0\" */ iszero(/** @src 0:16387:16406  \"sender1.code.length\" */ extcodesize(expr_6))\n                            /// @src 0:16383:16489  \"if (sender1.code.length == 0)...\"\n                            {\n                                /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                let _16 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                mstore(_16, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ add(_16, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA15 initCode must create sender\")\n                                /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                revert(_16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                            }\n                            /// @src 5:372:374  \"20\"\n                            if gt(/** @src 0:16548:16550  \"20\" */ 0x14, /** @src 5:372:374  \"20\" */ expr_length_1)\n                            {\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 0:1543:1547  \"2048\"\n                            let _17 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:16689:16713  \"opInfo.mUserOp.paymaster\" */ add(/** @src 0:16689:16703  \"opInfo.mUserOp\" */ mload(var_outOpInfo_mpos), /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                            /// @src 0:16572:16727  \"AccountDeployed(...\"\n                            let _18 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(_18, /** @src 5:372:374  \"20\" */ shr(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96, /** @src 5:372:374  \"20\" */ calldataload(/** @src 0:16529:16552  \"bytes20(initCode[0:20])\" */ expr_offset_1)))\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(_18, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_1)\n                            /// @src 0:16572:16727  \"AccountDeployed(...\"\n                            log3(_18, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 0:16572:16727  \"AccountDeployed(...\" */ 0xd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d, _17, cleaned)\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let cleaned_2 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:17900:17917  \"mUserOp.paymaster\" */ add(_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:17931:17962  \"uint256 missingAccountFunds = 0\"\n                        let var_missingAccountFunds := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                        /// @src 0:17976:18198  \"if (paymaster == address(0)) {...\"\n                        if /** @src 0:17980:18003  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                        /// @src 0:17976:18198  \"if (paymaster == address(0)) {...\"\n                        {\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(0, cleaned)\n                            mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                            let _19 := sload(keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                            /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                            let expr_7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                            /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                            switch /** @src 0:18094:18115  \"bal > requiredPrefund\" */ gt(_19, product)\n                            case /** @src 0:18094:18183  \"bal > requiredPrefund...\" */ 0 {\n                                expr_7 := /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:18162:18183  \"requiredPrefund - bal\" */ product, _19)\n                            }\n                            default /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                            {\n                                expr_7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                            }\n                            /// @src 0:18072:18183  \"missingAccountFunds = bal > requiredPrefund...\"\n                            var_missingAccountFunds := expr_7\n                        }\n                        /// @src 0:1543:1547  \"2048\"\n                        let _20 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                        let _21 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                        mstore(_21, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(226, 0x06608bdf))\n                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                        let trySuccessCondition := call(_6, cleaned, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ _21, sub(abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(add(_21, 4), var_userOp_1628_offset, _20, var_missingAccountFunds), _21), _21, /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                        let expr_8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                        if trySuccessCondition\n                        {\n                            let _22 := /** @src 0:13851:13863  \"userOp.nonce\" */ 32\n                            /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                            if gt(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ returndatasize()) { _22 := returndatasize() }\n                            finalize_allocation(_21, _22)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            if slt(sub(/** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ add(_21, _22), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _21), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            { revert(0, 0) }\n                            /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                            expr_8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(_21)\n                        }\n                        /// @src 0:18211:18617  \"try...\"\n                        switch iszero(trySuccessCondition)\n                        case 0 {\n                            /// @src 0:18436:18468  \"validationData = _validationData\"\n                            var_validationData_1 := expr_8\n                        }\n                        default /// @src 0:18211:18617  \"try...\"\n                        {\n                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                            let usr$len := returndatasize()\n                            /// @src 0:1543:1547  \"2048\"\n                            let _23 := 0x0800\n                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                            if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _23)\n                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                            {\n                                usr$len := /** @src 0:1543:1547  \"2048\" */ _23\n                            }\n                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                            let usr$ptr := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                            mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                            mstore(usr$ptr, usr$len)\n                            returndatacopy(add(usr$ptr, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                            /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                            let _24 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                            mstore(_24, shl(224, 0x65c8fd4d))\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ add(_24, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), 13)\n                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"AA23 reverted\")\n                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)\n                            /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                            revert(_24, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr, add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)), /** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24))\n                        }\n                        /// @src 0:18630:18999  \"if (paymaster == address(0)) {...\"\n                        if /** @src 0:17980:18003  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                        /// @src 0:18630:18999  \"if (paymaster == address(0)) {...\"\n                        {\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(0, cleaned)\n                            mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                            let dataSlot := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let _25 := sload(/** @src 0:18762:18780  \"senderInfo.deposit\" */ dataSlot)\n                            /// @src 0:18798:18921  \"if (requiredPrefund > deposit) {...\"\n                            if /** @src 0:18802:18827  \"requiredPrefund > deposit\" */ gt(product, _25)\n                            /// @src 0:18798:18921  \"if (requiredPrefund > deposit) {...\"\n                            {\n                                /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                let _26 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                mstore(_26, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ add(_26, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA21 didn't pay prefund\")\n                                /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                revert(_26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                            }\n                            sstore(dataSlot, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:18959:18984  \"deposit - requiredPrefund\" */ _25, product))\n                        }\n                        /// @src 0:24918:25098  \"validationData = _validateAccountPrepayment(...\"\n                        var_validationData := var_validationData_1\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let cleaned_3 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:25138:25152  \"mUserOp.sender\" */ _431_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                        let _27 := mload(/** @src 0:13835:13848  \"mUserOp.nonce\" */ add(_431_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(0, cleaned_3)\n                        mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                        let _28 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(0, shr(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _27))\n                        mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _28)\n                        let dataSlot_1 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _29 := sload(/** @src 2:1373:1407  \"nonceSequenceNumber[sender][key]++\" */ dataSlot_1)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        sstore(dataSlot_1, /** @src 2:1373:1407  \"nonceSequenceNumber[sender][key]++\" */ increment_uint256(_29))\n                        /// @src 0:25109:25249  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                        if /** @src 0:25113:25168  \"!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)\" */ iszero(/** @src 2:1373:1414  \"nonceSequenceNumber[sender][key]++ == seq\" */ eq(_29, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 2:1343:1356  \"uint64(nonce)\" */ _27, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xffffffffffffffff)))\n                        /// @src 0:25109:25249  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                        {\n                            /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                            let _30 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                            mstore(_30, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ add(_30, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                            mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 26)\n                            mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA25 invalid account nonce\")\n                            /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                            revert(_30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                        }\n                        /// @src 0:25283:25421  \"if (preGas - gasleft() > verificationGasLimit) {...\"\n                        if /** @src 0:25287:25328  \"preGas - gasleft() > verificationGasLimit\" */ gt(/** @src 0:1543:1547  \"2048\" */ sub(expr, /** @src 0:25296:25305  \"gasleft()\" */ gas()), /** @src 0:25287:25328  \"preGas - gasleft() > verificationGasLimit\" */ _6)\n                        /// @src 0:25283:25421  \"if (preGas - gasleft() > verificationGasLimit) {...\"\n                        {\n                            /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                            let _31 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                            mstore(_31, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ add(_31, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                            mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 30)\n                            mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA26 over verificationGasLimit\")\n                            /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                            revert(_31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                        }\n                        /// @src 0:25441:25461  \"bytes memory context\"\n                        let var_context_1745_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                        /// @src 0:25441:25461  \"bytes memory context\"\n                        var_context_1745_mpos := /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96\n                        /// @src 0:25471:25721  \"if (mUserOp.paymaster != address(0)) {...\"\n                        if /** @src 0:25475:25506  \"mUserOp.paymaster != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:25475:25492  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 0:25471:25721  \"if (mUserOp.paymaster != address(0)) {...\"\n                        {\n                            /// @src 0:25559:25710  \"_validatePaymasterPrepayment(...\"\n                            let var_context_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                            /// @src 0:25559:25710  \"_validatePaymasterPrepayment(...\"\n                            let var_validationData_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                            /// @src 0:19872:19881  \"gasleft()\"\n                            let expr_9 := gas()\n                            /// @src 0:19925:19939  \"opInfo.mUserOp\"\n                            let _mpos_1 := mload(var_outOpInfo_mpos)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let cleaned_4 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:19973:19990  \"mUserOp.paymaster\" */ add(_mpos_1, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, cleaned_4)\n                            mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                            let dataSlot_2 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let _32 := sload(/** @src 0:20091:20112  \"paymasterInfo.deposit\" */ dataSlot_2)\n                            /// @src 0:20126:20248  \"if (deposit < requiredPreFund) {...\"\n                            if /** @src 0:20130:20155  \"deposit < requiredPreFund\" */ lt(_32, product)\n                            /// @src 0:20126:20248  \"if (deposit < requiredPreFund) {...\"\n                            {\n                                /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                let _33 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                mstore(_33, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ add(_33, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 30)\n                                mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA31 paymaster deposit too low\")\n                                /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                revert(_33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                            }\n                            sstore(dataSlot_2, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:20285:20310  \"deposit - requiredPreFund\" */ _32, product))\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let _34 := mload(/** @src 0:20357:20394  \"mUserOp.paymasterVerificationGasLimit\" */ add(_mpos_1, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128))\n                            /// @src 0:1543:1547  \"2048\"\n                            let _35 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                            let _36 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                            mstore(_36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(226, 0x14add44b))\n                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                            let trySuccessCondition_1 := call(_34, cleaned_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ _36, sub(abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(add(_36, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ var_userOp_1628_offset, _35, product), _36), _36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                            let expr_component_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                            let expr_component := 0\n                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                            if trySuccessCondition_1\n                            {\n                                let _37 := returndatasize()\n                                returndatacopy(_36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ _37)\n                                finalize_allocation(_36, _37)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if slt(sub(/** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                { revert(0, 0) }\n                                let offset := mload(_36)\n                                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                                if iszero(slt(add(add(_36, offset), 0x1f), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                { revert(0, 0) }\n                                let _38 := mload(add(_36, offset))\n                                let _39 := array_allocation_size_bytes(_38)\n                                let memPtr_2 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                finalize_allocation(memPtr_2, _39)\n                                mstore(memPtr_2, _38)\n                                if gt(add(add(add(_36, offset), _38), /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                { revert(0, 0) }\n                                copy_memory_to_memory_with_cleanup(add(add(_36, offset), /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr_2, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _38)\n                                let value_1 := mload(add(_36, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                expr_component_mpos := memPtr_2\n                                expr_component := value_1\n                            }\n                            /// @src 0:20408:20925  \"try...\"\n                            switch iszero(trySuccessCondition_1)\n                            case 0 {\n                                /// @src 0:20708:20726  \"context = _context\"\n                                var_context_mpos := expr_component_mpos\n                                /// @src 0:20744:20776  \"validationData = _validationData\"\n                                var_validationData_2 := expr_component\n                            }\n                            default /// @src 0:20408:20925  \"try...\"\n                            {\n                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                let usr$len_1 := returndatasize()\n                                /// @src 0:1543:1547  \"2048\"\n                                let _40 := 0x0800\n                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                if gt(usr$len_1, /** @src 0:1543:1547  \"2048\" */ _40)\n                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                {\n                                    usr$len_1 := /** @src 0:1543:1547  \"2048\" */ _40\n                                }\n                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                let usr$ptr_1 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr_1, usr$len_1), /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                mstore(usr$ptr_1, usr$len_1)\n                                returndatacopy(add(usr$ptr_1, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len_1)\n                                /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                let _41 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                mstore(_41, /** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ shl(224, 0x65c8fd4d))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ add(_41, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), 13)\n                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"AA33 reverted\")\n                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)\n                                /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                revert(_41, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr_1, add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)), /** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41))\n                            }\n                            /// @src 0:20938:21087  \"if (preGas - gasleft() > pmVerificationGasLimit) {...\"\n                            if /** @src 0:20942:20985  \"preGas - gasleft() > pmVerificationGasLimit\" */ gt(/** @src 0:1543:1547  \"2048\" */ sub(expr_9, /** @src 0:20951:20960  \"gasleft()\" */ gas()), /** @src 0:20942:20985  \"preGas - gasleft() > pmVerificationGasLimit\" */ _34)\n                            /// @src 0:20938:21087  \"if (preGas - gasleft() > pmVerificationGasLimit) {...\"\n                            {\n                                /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                let _42 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                mstore(_42, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ add(_42, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 39)\n                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA36 over paymasterVerificationG\")\n                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"asLimit\")\n                                /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                revert(_42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                            }\n                            /// @src 0:25522:25710  \"(context, paymasterValidationData) = _validatePaymasterPrepayment(...\"\n                            var_paymasterValidationData := var_validationData_2\n                            var_context_1745_mpos := var_context_mpos\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(/** @src 0:25754:25771  \"outOpInfo.prefund\" */ add(var_outOpInfo_mpos, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ product)\n                        mstore(/** @src 0:25803:25826  \"outOpInfo.contextOffset\" */ add(var_outOpInfo_mpos, /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_context_1745_mpos)\n                        mstore(/** @src 0:25874:25892  \"outOpInfo.preOpGas\" */ add(var_outOpInfo_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:1543:1547  \"2048\" */ sub(expr, /** @src 0:25904:25913  \"gasleft()\" */ gas()), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:14020:14045  \"userOp.preVerificationGas\" */ add(var_userOp_1628_offset, 160))))\n                    }\n                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                    function abi_encode_struct_UserOpInfo(value, pos)\n                    {\n                        let _1 := mload(value)\n                        let _2 := sub(shl(160, 1), 1)\n                        mstore(pos, and(mload(_1), _2))\n                        mstore(add(pos, 0x20), mload(add(_1, 0x20)))\n                        mstore(add(pos, 0x40), mload(add(_1, 0x40)))\n                        mstore(add(pos, 0x60), mload(add(_1, 0x60)))\n                        mstore(add(pos, 0x80), mload(add(_1, 0x80)))\n                        mstore(add(pos, 0xa0), mload(add(_1, 0xa0)))\n                        mstore(add(pos, 0xc0), mload(add(_1, 0xc0)))\n                        mstore(add(pos, 0xe0), and(mload(add(_1, 0xe0)), _2))\n                        let _3 := 0x0100\n                        mstore(add(pos, _3), mload(add(_1, _3)))\n                        let _4 := 0x0120\n                        mstore(add(pos, _4), mload(add(_1, _4)))\n                        mstore(add(pos, 0x0140), mload(add(value, 0x20)))\n                        mstore(add(pos, 0x0160), mload(add(value, 0x40)))\n                        mstore(add(pos, 0x0180), mload(add(value, 0x60)))\n                        mstore(add(pos, 0x01a0), mload(add(value, 0x80)))\n                    }\n                    /// @ast-id 328 @src 0:3032:6109  \"function _executeUserOp(...\"\n                    function fun_executeUserOp(var_opIndex, var_userOp_offset, var_opInfo_155_mpos) -> var_collected\n                    {\n                        /// @src 0:3242:3251  \"gasleft()\"\n                        let expr := gas()\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _1 := mload(/** @src 0:3309:3329  \"opInfo.contextOffset\" */ add(var_opInfo_155_mpos, 96))\n                        /// @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\"\n                        let _2 := 0x40\n                        let var_saveFreePtr := mload(_2)\n                        /// @src 0:3531:3546  \"userOp.callData\"\n                        let expr_offset, expr_182_length := access_calldata_tail_bytes_calldata(var_userOp_offset, add(var_userOp_offset, /** @src 0:3309:3329  \"opInfo.contextOffset\" */ 96))\n                        /// @src 0:3560:3582  \"bytes memory innerCall\"\n                        let var_innerCall_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                        /// @src 0:3596:3612  \"bytes4 methodSig\"\n                        let var_methodSig := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerCall_mpos\n                        /// @src 0:3596:3612  \"bytes4 methodSig\"\n                        var_methodSig := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerCall_mpos\n                        /// @src 0:3626:3806  \"assembly {...\"\n                        if gt(expr_182_length, 3)\n                        {\n                            var_methodSig := calldataload(expr_offset)\n                        }\n                        /// @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\"\n                        let _3 := shl(224, 0x8dd7712f)\n                        /// @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\"\n                        switch /** @src 0:3823:3874  \"methodSig == IAccountExecute.executeUserOp.selector\" */ eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:3823:3874  \"methodSig == IAccountExecute.executeUserOp.selector\" */ var_methodSig, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0xffffffff)), /** @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\" */ _3)\n                        case /** @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\" */ 0 {\n                            /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                            mstore(add(var_saveFreePtr, 0x20), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 4381779))\n                            mstore(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ add(var_saveFreePtr, 36), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 512)\n                            let tail := abi_encode_bytes_calldata(expr_offset, expr_182_length, add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 548))\n                            abi_encode_struct_UserOpInfo(var_opInfo_155_mpos, add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68))\n                            mstore(add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 516), add(sub(tail, /** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(35)))\n                            /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                            let _4 := sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(_1, tail), /** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr)\n                            mstore(var_saveFreePtr, add(_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(31)))\n                            /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                            finalize_allocation(var_saveFreePtr, _4)\n                            /// @src 0:4146:4221  \"innerCall = abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                            var_innerCall_mpos := var_saveFreePtr\n                        }\n                        default /// @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\"\n                        {\n                            /// @src 0:1543:1547  \"2048\"\n                            let _5 := mload(/** @src 0:3978:3995  \"opInfo.userOpHash\" */ add(var_opInfo_155_mpos, 32))\n                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                            let expr_206_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                            mstore(add(expr_206_mpos, /** @src 0:3978:3995  \"opInfo.userOpHash\" */ 32), /** @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\" */ _3)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            mstore(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ add(expr_206_mpos, 36), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let tail_1 := abi_encode_struct_PackedUserOperation_calldata(var_userOp_offset, add(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ expr_206_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100))\n                            mstore(add(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ expr_206_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), _5)\n                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                            let _6 := sub(tail_1, expr_206_mpos)\n                            let _7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(31)\n                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                            mstore(expr_206_mpos, add(_6, _7))\n                            finalize_allocation(expr_206_mpos, _6)\n                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                            let expr_217_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                            mstore(add(expr_217_mpos, /** @src 0:3978:3995  \"opInfo.userOpHash\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 4381779))\n                            mstore(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ add(expr_217_mpos, /** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ 36), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 512)\n                            let tail_2 := abi_encode_bytes(expr_206_mpos, add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 548))\n                            abi_encode_struct_UserOpInfo(var_opInfo_155_mpos, add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68))\n                            mstore(add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 516), add(sub(tail_2, /** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(35)))\n                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                            let _8 := sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(_1, tail_2), /** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos)\n                            mstore(expr_217_mpos, add(_8, /** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ _7))\n                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                            finalize_allocation(expr_217_mpos, _8)\n                            /// @src 0:4015:4095  \"innerCall = abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                            var_innerCall_mpos := expr_217_mpos\n                        }\n                        /// @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\"\n                        let _9 := 32\n                        let var_success := call(gas(), address(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ add(var_innerCall_mpos, _9), mload(var_innerCall_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9)\n                        var_collected := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                        /// @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\"\n                        mstore(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ var_saveFreePtr)\n                        /// @src 0:4488:6103  \"if (!success) {...\"\n                        if /** @src 0:4492:4500  \"!success\" */ iszero(var_success)\n                        /// @src 0:4488:6103  \"if (!success) {...\"\n                        {\n                            /// @src 0:4516:4539  \"bytes32 innerRevertCode\"\n                            let var_innerRevertCode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                            /// @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\"\n                            if eq(/** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9, /** @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                            {\n                                returndatacopy(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerRevertCode, var_innerRevertCode, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9)\n                                /// @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\"\n                                var_innerRevertCode := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerRevertCode)\n                            }\n                            /// @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                            switch /** @src 0:4797:4832  \"innerRevertCode == INNER_OUT_OF_GAS\" */ eq(var_innerRevertCode, /** @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeaddead))\n                            case /** @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\" */ 0 {\n                                /// @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\"\n                                switch /** @src 0:5093:5136  \"innerRevertCode == INNER_REVERT_LOW_PREFUND\" */ eq(var_innerRevertCode, /** @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeadaa51))\n                                case /** @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\" */ 0 {\n                                    /// @src 0:1543:1547  \"2048\"\n                                    let _10 := mload(/** @src 0:5612:5629  \"opInfo.userOpHash\" */ add(var_opInfo_155_mpos, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                    /// @src 0:5651:5665  \"opInfo.mUserOp\"\n                                    let _565_mpos := mload(var_opInfo_155_mpos)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _11 := sub(shl(160, 1), 1)\n                                    let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:5651:5672  \"opInfo.mUserOp.sender\" */ _565_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                    let _12 := mload(/** @src 0:5694:5714  \"opInfo.mUserOp.nonce\" */ add(_565_mpos, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    let usr$len := returndatasize()\n                                    /// @src 0:1543:1547  \"2048\"\n                                    let _13 := 0x0800\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _13)\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    {\n                                        usr$len := /** @src 0:1543:1547  \"2048\" */ _13\n                                    }\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    let usr$ptr := mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    mstore(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    mstore(usr$ptr, usr$len)\n                                    returndatacopy(add(usr$ptr, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                    /// @src 0:5572:5795  \"PostOpRevertReason(...\"\n                                    let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(_14, _12)\n                                    /// @src 0:1543:1547  \"2048\"\n                                    mstore(add(_14, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                    /// @src 0:5572:5795  \"PostOpRevertReason(...\"\n                                    log3(_14, sub(/** @src 0:1543:1547  \"2048\" */ abi_encode_bytes(usr$ptr, add(_14, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)), /** @src 0:5572:5795  \"PostOpRevertReason(...\" */ _14), 0xf62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792, _10, cleaned)\n                                    /// @src 0:5834:5852  \"preGas - gasleft()\"\n                                    let expr_1 := checked_sub_uint256(expr, /** @src 0:5843:5852  \"gasleft()\" */ gas())\n                                    /// @src 0:5855:5870  \"opInfo.preOpGas\"\n                                    let _15 := add(var_opInfo_155_mpos, 128)\n                                    /// @src 0:5900:6078  \"_postExecution(...\"\n                                    let var_actualGas := /** @src 0:5834:5870  \"preGas - gasleft() + opInfo.preOpGas\" */ checked_add_uint256(expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:5855:5870  \"opInfo.preOpGas\" */ _15))\n                                    /// @src 0:5900:6078  \"_postExecution(...\"\n                                    let var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:26799:26808  \"gasleft()\"\n                                    let expr_2 := gas()\n                                    /// @src 0:26842:26863  \"address refundAddress\"\n                                    let var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_actualGasCost\n                                    /// @src 0:26842:26863  \"address refundAddress\"\n                                    let var_refundAddress_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_actualGasCost\n                                    /// @src 0:26907:26921  \"opInfo.mUserOp\"\n                                    let _mpos := mload(var_opInfo_155_mpos)\n                                    /// @src 0:26954:26980  \"getUserOpGasPrice(mUserOp)\"\n                                    let expr_3 := fun_getUserOpGasPrice(_mpos)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27015:27032  \"mUserOp.paymaster\" */ add(_mpos, 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                    /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                    switch /** @src 0:27050:27073  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_1)\n                                    case /** @src 0:27046:27885  \"if (paymaster == address(0)) {...\" */ 0 {\n                                        /// @src 0:27162:27187  \"refundAddress = paymaster\"\n                                        var_refundAddress := cleaned_1\n                                        /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                        if /** @src 0:27209:27227  \"context.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27209:27223  \"context.length\" */ _1)))\n                                        /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                        {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            var_refundAddress_1 := var_actualGasCost\n                                        }\n                                    }\n                                    default /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                    {\n                                        /// @src 0:27093:27123  \"refundAddress = mUserOp.sender\"\n                                        var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27109:27123  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                    }\n                                    /// @src 0:27898:27929  \"actualGas += preGas - gasleft()\"\n                                    var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, /** @src 0:1543:1547  \"2048\" */ sub(expr_2, /** @src 0:27920:27929  \"gasleft()\" */ gas()))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _16 := mload(/** @src 0:28052:28072  \"mUserOp.callGasLimit\" */ add(_mpos, /** @src 0:3309:3329  \"opInfo.contextOffset\" */ 96))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let sum := add(_16, mload(/** @src 0:28075:28106  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos, 160)))\n                                    /// @src 0:1543:1547  \"2048\"\n                                    let diff := sub(var_actualGas, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:28163:28178  \"opInfo.preOpGas\" */ _15))\n                                    /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                    if /** @src 0:28316:28352  \"executionGasLimit > executionGasUsed\" */ gt(sum, diff)\n                                    /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                    {\n                                        /// @src 0:28538:28567  \"actualGas += unusedGasPenalty\"\n                                        var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, div(mul(/** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:28396:28432  \"executionGasLimit - executionGasUsed\" */ sum, diff), /** @src 0:1596:1598  \"10\" */ 0x0a), /** @src 0:28513:28516  \"100\" */ 0x64))\n                                    }\n                                    /// @src 0:28614:28650  \"actualGasCost = actualGas * gasPrice\"\n                                    var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mul(/** @src 0:28630:28650  \"actualGas * gasPrice\" */ var_actualGas, expr_3)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _17 := mload(/** @src 0:28682:28696  \"opInfo.prefund\" */ add(var_opInfo_155_mpos, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2))\n                                    /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                    switch /** @src 0:28714:28737  \"prefund < actualGasCost\" */ lt(_17, var_actualGasCost)\n                                    case /** @src 0:28710:29503  \"if (prefund < actualGasCost) {...\" */ 0 {\n                                        /// @src 0:29291:29331  \"_incrementDeposit(refundAddress, refund)\"\n                                        pop(fun_incrementDeposit(var_refundAddress, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:29250:29273  \"prefund - actualGasCost\" */ _17, var_actualGasCost)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if var_refundAddress_1\n                                        {\n                                            mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                            mstore(4, 0x21)\n                                            revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                        }\n                                        /// @src 0:29478:29487  \"actualGas\"\n                                        fun_emitUserOperationEvent(var_opInfo_155_mpos, var_actualGasCost, var_actualGas)\n                                    }\n                                    default /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if var_refundAddress_1\n                                        {\n                                            mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                            mstore(4, 0x21)\n                                            revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                        }\n                                        /// @src 0:28829:28852  \"actualGasCost = prefund\"\n                                        var_actualGasCost := _17\n                                        /// @src 0:28892:28898  \"opInfo\"\n                                        fun_emitPrefundTooLow(var_opInfo_155_mpos)\n                                        /// @src 0:28974:28983  \"actualGas\"\n                                        fun_emitUserOperationEvent(var_opInfo_155_mpos, _17, var_actualGas)\n                                    }\n                                    /// @src 0:5888:6078  \"collected = _postExecution(...\"\n                                    var_collected := var_actualGasCost\n                                }\n                                default /// @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\"\n                                {\n                                    /// @src 0:5269:5287  \"preGas - gasleft()\"\n                                    let expr_4 := checked_sub_uint256(expr, /** @src 0:5278:5287  \"gasleft()\" */ gas())\n                                    /// @src 0:5269:5305  \"preGas - gasleft() + opInfo.preOpGas\"\n                                    let expr_5 := checked_add_uint256(expr_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:5290:5305  \"opInfo.preOpGas\" */ add(var_opInfo_155_mpos, 128)))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _18 := mload(/** @src 0:5347:5361  \"opInfo.prefund\" */ add(var_opInfo_155_mpos, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2))\n                                    /// @src 0:5397:5403  \"opInfo\"\n                                    fun_emitPrefundTooLow(var_opInfo_155_mpos)\n                                    /// @src 0:5475:5484  \"actualGas\"\n                                    fun_emitUserOperationEvent(var_opInfo_155_mpos, _18, expr_5)\n                                    /// @src 0:5503:5528  \"collected = actualGasCost\"\n                                    var_collected := _18\n                                }\n                            }\n                            default /// @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                            {\n                                /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                let _19 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                mstore(_19, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ add(_19, 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                /// @src 0:1474:1487  \"hex\\\"deadaa51\\\"\"\n                                mstore(add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 36), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 68), 15)\n                                mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ \"AA95 out of gas\")\n                                /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                revert(_19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 132)\n                            }\n                        }\n                    }\n                    /// @ast-id 146 @src 0:2446:2725  \"function _compensate(address payable beneficiary, uint256 amount) internal {...\"\n                    function fun_compensate(var_beneficiary, var_amount)\n                    {\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _1 := and(/** @src 0:2539:2564  \"beneficiary != address(0)\" */ var_beneficiary, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 0:2539:2564  \"beneficiary != address(0)\" */ iszero(_1)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 24)\n                            mstore(add(memPtr, 68), \"AA90 invalid beneficiary\")\n                            revert(memPtr, 100)\n                        }\n                        /// @src 0:2622:2657  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                        let expr_138_component := call(gas(), _1, var_amount, /** @src 0:2562:2563  \"0\" */ 0x00, 0x00, 0x00, 0x00)\n                        /// @src 0:2622:2657  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                        pop(extract_returndata())\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        if iszero(expr_138_component)\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 31)\n                            mstore(add(memPtr_1, 68), \"AA91 failed send to beneficiary\")\n                            revert(memPtr_1, 100)\n                        }\n                    }\n                    /// @ast-id 2527 @src 4:1559:1818  \"function _incrementDeposit(address account, uint256 amount) internal returns (uint256) {...\"\n                    function fun_incrementDeposit(var_account, var_amount) -> var\n                    {\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(/** @src 4:1683:1691  \"deposits\" */ 0x00, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 4:1683:1691  \"deposits\" */ 0x00)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let dataSlot := keccak256(/** @src 4:1683:1691  \"deposits\" */ 0x00, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x40)\n                        /// @src 4:1730:1751  \"info.deposit + amount\"\n                        let expr := checked_add_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 4:1730:1742  \"info.deposit\" */ dataSlot), /** @src 4:1730:1751  \"info.deposit + amount\" */ var_amount)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        sstore(dataSlot, expr)\n                        /// @src 4:1795:1811  \"return newAmount\"\n                        var := expr\n                    }\n                    /// @ast-id 2053 @src 0:29763:30294  \"function getUserOpGasPrice(...\"\n                    function fun_getUserOpGasPrice(var_mUserOp_mpos) -> var_\n                    {\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _1 := mload(/** @src 0:29922:29942  \"mUserOp.maxFeePerGas\" */ add(var_mUserOp_mpos, 256))\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _2 := mload(/** @src 0:29987:30015  \"mUserOp.maxPriorityFeePerGas\" */ add(var_mUserOp_mpos, 288))\n                        /// @src 0:30029:30202  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                        if /** @src 0:30033:30069  \"maxFeePerGas == maxPriorityFeePerGas\" */ eq(_1, _2)\n                        /// @src 0:30029:30202  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                        {\n                            /// @src 0:30168:30187  \"return maxFeePerGas\"\n                            var_ := _1\n                            leave\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _3 := add(/** @src 0:30240:30276  \"maxPriorityFeePerGas + block.basefee\" */ _2, /** @src 0:30263:30276  \"block.basefee\" */ basefee())\n                        /// @src 1:3338:3351  \"a < b ? a : b\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 1:3338:3351  \"a < b ? a : b\"\n                        switch /** @src 1:3338:3343  \"a < b\" */ lt(_1, _3)\n                        case /** @src 1:3338:3351  \"a < b ? a : b\" */ 0 { expr := _3 }\n                        default { expr := _1 }\n                        /// @src 0:30215:30277  \"return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee)\"\n                        var_ := expr\n                    }\n                    /// @ast-id 358 @src 0:6115:6505  \"function emitUserOperationEvent(UserOpInfo memory opInfo, bool success, uint256 actualGasCost, uint256 actualGas) internal virtual {...\"\n                    function fun_emitUserOperationEvent(var_opInfo_mpos, var_actualGasCost, var_actualGas)\n                    {\n                        /// @src 0:1543:1547  \"2048\"\n                        let _1 := mload(/** @src 0:6293:6310  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                        /// @src 0:6324:6338  \"opInfo.mUserOp\"\n                        let _mpos := mload(var_opInfo_mpos)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _2 := sub(shl(160, 1), 1)\n                        let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6324:6345  \"opInfo.mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2)\n                        let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6359:6383  \"opInfo.mUserOp.paymaster\" */ add(_mpos, 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2)\n                        let _3 := mload(/** @src 0:6397:6417  \"opInfo.mUserOp.nonce\" */ add(_mpos, /** @src 0:6293:6310  \"opInfo.userOpHash\" */ 32))\n                        /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                        let _4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                        mstore(_4, _3)\n                        mstore(add(_4, /** @src 0:6293:6310  \"opInfo.userOpHash\" */ 32), /** @src -1:-1:-1 */ 0)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(add(_4, 64), var_actualGasCost)\n                        mstore(add(_4, 96), var_actualGas)\n                        /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                        log4(_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 128, /** @src 0:6261:6498  \"UserOperationEvent(...\" */ 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _1, cleaned, cleaned_1)\n                    }\n                    /// @ast-id 376 @src 0:6511:6739  \"function emitPrefundTooLow(UserOpInfo memory opInfo) internal virtual {...\"\n                    function fun_emitPrefundTooLow(var_opInfo_mpos)\n                    {\n                        /// @src 0:1543:1547  \"2048\"\n                        let _1 := mload(/** @src 0:6636:6653  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                        /// @src 0:6667:6681  \"opInfo.mUserOp\"\n                        let _665_mpos := mload(var_opInfo_mpos)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6667:6688  \"opInfo.mUserOp.sender\" */ _665_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                        let _2 := mload(/** @src 0:6702:6722  \"opInfo.mUserOp.nonce\" */ add(_665_mpos, /** @src 0:6636:6653  \"opInfo.userOpHash\" */ 32))\n                        /// @src 0:6596:6732  \"UserOperationPrefundTooLow(...\"\n                        let _3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                        mstore(_3, _2)\n                        /// @src 0:6596:6732  \"UserOperationPrefundTooLow(...\"\n                        log3(_3, /** @src 0:6636:6653  \"opInfo.userOpHash\" */ 32, /** @src 0:6596:6732  \"UserOperationPrefundTooLow(...\" */ 0x67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e, _1, cleaned)\n                    }\n                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                    function abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        mstore(headStart, 96)\n                        tail := abi_encode_struct_PackedUserOperation_calldata(value0, add(headStart, 96))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                    }\n                    /// @ast-id 1622 @src 0:22951:23437  \"function _getValidationData(...\"\n                    function fun_getValidationData(var_validationData) -> var_aggregator, var_outOfTimeRange\n                    {\n                        /// @src 0:23091:23167  \"if (validationData == 0) {...\"\n                        if /** @src 0:23095:23114  \"validationData == 0\" */ iszero(var_validationData)\n                        /// @src 0:23091:23167  \"if (validationData == 0) {...\"\n                        {\n                            /// @src 0:23130:23156  \"return (address(0), false)\"\n                            var_aggregator := /** @src 0:23113:23114  \"0\" */ 0x00\n                            /// @src 0:23130:23156  \"return (address(0), false)\"\n                            var_outOfTimeRange := /** @src 0:23113:23114  \"0\" */ 0x00\n                            /// @src 0:23130:23156  \"return (address(0), false)\"\n                            leave\n                        }\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let memPtr := mload(64)\n                        finalize_allocation_26350(memPtr)\n                        mstore(memPtr, /** @src 0:23113:23114  \"0\" */ 0x00)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(add(memPtr, 32), /** @src 0:23113:23114  \"0\" */ 0x00)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        mstore(add(memPtr, 64), /** @src 0:23113:23114  \"0\" */ 0x00)\n                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                        let _1 := and(/** @src 1:1507:1530  \"uint160(validationData)\" */ var_validationData, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                        let _2 := 0xffffffffffff\n                        /// @src 1:1537:1586  \"uint48 validUntil = uint48(validationData >> 160)\"\n                        let var_validUntil := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(/** @src 1:1582:1585  \"160\" */ 0xa0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validationData), _2)\n                        /// @src 1:1592:1659  \"if (validUntil == 0) {...\"\n                        if /** @src 1:1596:1611  \"validUntil == 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validUntil)\n                        /// @src 1:1592:1659  \"if (validUntil == 0) {...\"\n                        {\n                            /// @src 1:1623:1652  \"validUntil = type(uint48).max\"\n                            var_validUntil := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2\n                        }\n                        let result := shr(/** @src 1:1710:1718  \"48 + 160\" */ 0xd0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validationData)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_26350(memPtr_1)\n                        mstore(memPtr_1, _1)\n                        mstore(/** @src 1:1733:1783  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32), result)\n                        let _3 := and(var_validUntil, _2)\n                        mstore(/** @src 1:1733:1783  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64), _3)\n                        /// @src 0:23322:23392  \"block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                        let expr := /** @src 0:23322:23355  \"block.timestamp > data.validUntil\" */ gt(/** @src 0:23322:23337  \"block.timestamp\" */ timestamp(), /** @src 0:23322:23355  \"block.timestamp > data.validUntil\" */ _3)\n                        /// @src 0:23322:23392  \"block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 0:23359:23392  \"block.timestamp < data.validAfter\" */ lt(/** @src 0:23322:23337  \"block.timestamp\" */ timestamp(), /** @src 0:23359:23392  \"block.timestamp < data.validAfter\" */ result)\n                        }\n                        /// @src 0:23305:23392  \"outOfTimeRange = block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                        var_outOfTimeRange := expr\n                        /// @src 0:23402:23430  \"aggregator = data.aggregator\"\n                        var_aggregator := _1\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n            /// @use-src 3:\"lib/account-abstraction/contracts/core/SenderCreator.sol\"\n            object \"SenderCreator_2414\" {\n                code {\n                    {\n                        /// @src 3:205:1231  \"contract SenderCreator {...\"\n                        let _1 := memoryguard(0x80)\n                        mstore(64, _1)\n                        if callvalue() { revert(0, 0) }\n                        let _2 := datasize(\"SenderCreator_2414_deployed\")\n                        codecopy(_1, dataoffset(\"SenderCreator_2414_deployed\"), _2)\n                        return(_1, _2)\n                    }\n                }\n                /// @use-src 3:\"lib/account-abstraction/contracts/core/SenderCreator.sol\"\n                object \"SenderCreator_2414_deployed\" {\n                    code {\n                        {\n                            /// @src 3:205:1231  \"contract SenderCreator {...\"\n                            let _1 := memoryguard(0x80)\n                            if iszero(lt(calldatasize(), 4))\n                            {\n                                let _2 := 0\n                                if eq(0x570e1a36, shr(224, calldataload(_2)))\n                                {\n                                    if callvalue() { revert(_2, _2) }\n                                    if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                    let offset := calldataload(4)\n                                    let _3 := 0xffffffffffffffff\n                                    if gt(offset, _3) { revert(_2, _2) }\n                                    if iszero(slt(add(offset, 35), calldatasize())) { revert(_2, _2) }\n                                    let length := calldataload(add(4, offset))\n                                    if gt(length, _3) { revert(_2, _2) }\n                                    if gt(add(add(offset, length), 36), calldatasize()) { revert(_2, _2) }\n                                    let var_sender := _2\n                                    if gt(/** @src 3:726:728  \"20\" */ 0x14, /** @src 3:205:1231  \"contract SenderCreator {...\" */ length) { revert(_2, _2) }\n                                    let lengthOut := add(length, not(19))\n                                    if gt(lengthOut, _3)\n                                    {\n                                        mstore(_2, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(_2, 36)\n                                    }\n                                    let _4 := not(31)\n                                    let newFreePtr := add(_1, and(add(and(add(length, 11), _4), 63), _4))\n                                    if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                                    {\n                                        mstore(_2, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(_2, 36)\n                                    }\n                                    mstore(64, newFreePtr)\n                                    mstore(_1, lengthOut)\n                                    let dst := add(_1, 32)\n                                    calldatacopy(dst, add(offset, 56), lengthOut)\n                                    mstore(add(add(_1, length), 12), _2)\n                                    /// @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\"\n                                    let var_success := call(gas(), /** @src 3:205:1231  \"contract SenderCreator {...\" */ shr(96, calldataload(add(offset, 36))), _2, /** @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\" */ dst, mload(_1), /** @src 3:205:1231  \"contract SenderCreator {...\" */ _2, 32)\n                                    /// @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\"\n                                    var_sender := mload(/** @src 3:205:1231  \"contract SenderCreator {...\" */ _2)\n                                    /// @src 3:1165:1223  \"if (!success) {...\"\n                                    if /** @src 3:1169:1177  \"!success\" */ iszero(var_success)\n                                    /// @src 3:1165:1223  \"if (!success) {...\"\n                                    {\n                                        /// @src 3:1193:1212  \"sender = address(0)\"\n                                        var_sender := /** @src 3:205:1231  \"contract SenderCreator {...\" */ _2\n                                    }\n                                    let memPos := mload(64)\n                                    mstore(memPos, and(var_sender, sub(shl(160, 1), 1)))\n                                    return(memPos, 32)\n                                }\n                            }\n                            revert(0, 0)\n                        }\n                    }\n                    data \".metadata\" hex\"a164736f6c6343000818000a\"\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000818000a\"\n    }\n}\n","hash":"01000111d5c7644ca800f6c5d087e40d3438ab2912ea0e41f7c8595edda415a4","factoryDependencies":{"010008ff35c9de59754af35159e8b216a905253c0ace3a7a5eec594a86207d6d":"lib/account-abstraction/contracts/core/EntryPoint.sol:EntryPoint"},"id":82}