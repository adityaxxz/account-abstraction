{"abi":[{"type":"constructor","inputs":[{"name":"entrypoint","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"execute","inputs":[{"name":"dest","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"functionData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getEntryPoint","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validateUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"missingAccountFunds","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"validationData","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"ECDSAInvalidSignature","inputs":[]},{"type":"error","name":"ECDSAInvalidSignatureLength","inputs":[{"name":"length","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ECDSAInvalidSignatureS","inputs":[{"name":"s","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"MinimalAccount__CallFailed","inputs":[{"name":"","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"MinimalAccount__NotFromEntryPoint","inputs":[]},{"type":"error","name":"MinimalAccount__NotFromEntryPointOrOwner","inputs":[]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x60a0346100cf57601f61077638819003918201601f19168301916001600160401b038311848410176100d4578084926020946040528339810103126100cf57516001600160a01b0390818116908190036100cf5733156100b6576000543360018060a01b0319821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360805261068b90816100eb823960805181818161015501526102d10152f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c806319822f7c1461030057806344ab613f146102bc578063715018a61461025f5780638da5cb5b14610233578063b61d27f6146100f85763f2fde38b1461006f5750610011565b346100f45760203660031901126100f45761008861037a565b906100916104d8565b6001600160a01b039182169283156100de57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50346100f45760603660031901126100f45761011261037a565b9060449160443567ffffffffffffffff80821161022f573660238301121561022f578184013590811161022f57366024828401011161022f5760018060a01b03807f0000000000000000000000000000000000000000000000000000000000000000163314159081610221575b5061021157916024879392838594895193849301833781018481520391602435905af1926101ab6103ed565b93156101b5578480f35b929190925193849263038fe21560e41b845260208095850152805192836024860152825b8481106101fb5750505060448094508284010152601f80199101168101030190fd5b80830187015188820183015287955086016101d9565b8551630a1c585d60e31b81528490fd5b90508754163314153861017f565b8680fd5b50503461025b578160031936011261025b57905490516001600160a01b039091168152602090f35b5080fd5b83346102b957806003193601126102b9576102786104d8565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50503461025b578160031936011261025b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5090346100f457600319916060368401126103725780359267ffffffffffffffff8411610376576101209084360301126103725792610349602094604435946024359101610418565b9280610358575b505051908152f35b8180809233600019f15061036a6103ed565b503880610350565b8380fd5b8480fd5b600435906001600160a01b038216820361039057565b600080fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176103bb57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116103bb57601f01601f191660200190565b3d15610413573d90610406610401836103d1565b610395565b9182523d6000602084013e565b606090565b6000917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352601c52603c82209061010081013590601e1981360301821215610372570190813567ffffffffffffffff81116103725760208301813603811361037657610487610401836103d1565b93828552602083369201011161037657918460208386946104b296836104bb99013784010152610504565b90929192610540565b81546001600160a01b039081169116036104d25790565b50600190565b6000546001600160a01b031633036104ec57565b60405163118cdaa760e01b8152336004820152602490fd5b81519190604183036105355761052e92506020820151906060604084015193015160001a906105c5565b9192909190565b505060009160029190565b60048110156105af5780610552575050565b6001810361056c5760405163f645eedf60e01b8152600490fd5b6002810361058d5760405163fce698f760e01b815260048101839052602490fd5b6003146105975750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161064957926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561063d5780516001600160a01b0381161561063457918190565b50809160019190565b604051903d90823e3d90fd5b5050506000916003919056fea2646970667358221220ad3dee165e4b382ed3e62c87798cea21f25334a4707df2db0a7b48a6e47cdba364736f6c63430008180033","sourceMap":"817:3412:84:-:0;;;;;;;;;;;;;-1:-1:-1;;817:3412:84;;;;-1:-1:-1;;;;;817:3412:84;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;817:3412:84;;;;;;;;;;963:10;1273:26:62;1269:95;;-1:-1:-1;817:3412:84;963:10;817:3412;;;;;;;;;-1:-1:-1;817:3412:84;;;963:10;;817:3412;;3052:40:62;-1:-1:-1;3052:40:62;;986:38:84;;817:3412;;;;;;986:38;817:3412;;;;;;;;;;;1269:95:62;817:3412:84;;-1:-1:-1;;;1322:31:62;;-1:-1:-1;1322:31:62;;;817:3412:84;;;1322:31:62;817:3412:84;-1:-1:-1;817:3412:84;;;;;;-1:-1:-1;817:3412:84;;;;;-1:-1:-1;817:3412:84","linkReferences":{}},"deployedBytecode":{"object":"0x60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c806319822f7c1461030057806344ab613f146102bc578063715018a61461025f5780638da5cb5b14610233578063b61d27f6146100f85763f2fde38b1461006f5750610011565b346100f45760203660031901126100f45761008861037a565b906100916104d8565b6001600160a01b039182169283156100de57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50346100f45760603660031901126100f45761011261037a565b9060449160443567ffffffffffffffff80821161022f573660238301121561022f578184013590811161022f57366024828401011161022f5760018060a01b03807f0000000000000000000000000000000000000000000000000000000000000000163314159081610221575b5061021157916024879392838594895193849301833781018481520391602435905af1926101ab6103ed565b93156101b5578480f35b929190925193849263038fe21560e41b845260208095850152805192836024860152825b8481106101fb5750505060448094508284010152601f80199101168101030190fd5b80830187015188820183015287955086016101d9565b8551630a1c585d60e31b81528490fd5b90508754163314153861017f565b8680fd5b50503461025b578160031936011261025b57905490516001600160a01b039091168152602090f35b5080fd5b83346102b957806003193601126102b9576102786104d8565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50503461025b578160031936011261025b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5090346100f457600319916060368401126103725780359267ffffffffffffffff8411610376576101209084360301126103725792610349602094604435946024359101610418565b9280610358575b505051908152f35b8180809233600019f15061036a6103ed565b503880610350565b8380fd5b8480fd5b600435906001600160a01b038216820361039057565b600080fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176103bb57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116103bb57601f01601f191660200190565b3d15610413573d90610406610401836103d1565b610395565b9182523d6000602084013e565b606090565b6000917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352601c52603c82209061010081013590601e1981360301821215610372570190813567ffffffffffffffff81116103725760208301813603811361037657610487610401836103d1565b93828552602083369201011161037657918460208386946104b296836104bb99013784010152610504565b90929192610540565b81546001600160a01b039081169116036104d25790565b50600190565b6000546001600160a01b031633036104ec57565b60405163118cdaa760e01b8152336004820152602490fd5b81519190604183036105355761052e92506020820151906060604084015193015160001a906105c5565b9192909190565b505060009160029190565b60048110156105af5780610552575050565b6001810361056c5760405163f645eedf60e01b8152600490fd5b6002810361058d5760405163fce698f760e01b815260048101839052602490fd5b6003146105975750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161064957926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561063d5780516001600160a01b0381161561063457918190565b50809160019190565b604051903d90823e3d90fd5b5050506000916003919056fea2646970667358221220ad3dee165e4b382ed3e62c87798cea21f25334a4707df2db0a7b48a6e47cdba364736f6c63430008180033","sourceMap":"817:3412:84:-:0;;;;;;;;;;;;-1:-1:-1;817:3412:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;817:3412:84;;;;;;:::i;:::-;1500:62:62;;;:::i;:::-;-1:-1:-1;;;;;817:3412:84;;;;2627:22:62;;2623:91;;-1:-1:-1;;817:3412:84;;-1:-1:-1;;;;;;817:3412:84;;;;;;;3052:40:62;817:3412:84;;3052:40:62;817:3412:84;;2623:91:62;817:3412:84;-1:-1:-1;;;2672:31:62;;;;;817:3412:84;;;;;2672:31:62;817:3412:84;;;;;;;;;;;-1:-1:-1;;817:3412:84;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1730:12;;817:3412;1708:10;:35;;:60;;;;817:3412;1705:140;;;817:3412;;;;;;;;;;;;;;;;;;;;;2283:37;817:3412;;;2283:37;;;;;;:::i;:::-;2334:8;;2331:81;;817:3412;;;2331:81;817:3412;;;;;2366:34;;;;;;;;817:3412;;2366:34;;;817:3412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2366:34;;;;817:3412;;;;;;;;;;;;;;;-1:-1:-1;817:3412:84;;;;1705:140;817:3412;;-1:-1:-1;;;1791:42:84;;817:3412;;1791:42;1708:60;817:3412;;;;;1708:10;1747:21;;1708:60;;;817:3412;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;817:3412:84;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:62;;:::i;:::-;817:3412:84;;-1:-1:-1;;;;;;817:3412:84;;;;;;-1:-1:-1;;;;;817:3412:84;3052:40:62;817:3412:84;;3052:40:62;817:3412:84;;;;;;;;;;;;;;;;;;;;4204:12;-1:-1:-1;;;;;817:3412:84;;;;;;;;;;;;-1:-1:-1;;817:3412:84;;;;;;;;;;;;;;;;;;;;;;;;;;2726:38;817:3412;;;;;;;;;2726:38;:::i;:::-;3668:24;;3665:177;;817:3412;;;;;;;;3665:177;3735:10;;;;;3784:17;;3727:79;;;;:::i;:::-;;3665:177;;;;817:3412;;;;;;;;;;;;-1:-1:-1;;;;;817:3412:84;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;817:3412:84;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;817:3412:84;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;817:3412:84;;;;:::o;:::-;;;:::o;3119:468::-;-1:-1:-1;1367:309:75;;;;;;;;;3407:16:84;;;;817:3412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;3859:27:74;817:3412:84;;3915:8:74;817:3412:84;;;;;;;3859:27:74;:::i;:::-;3915:8;;;;;:::i;:::-;817:3412:84;;-1:-1:-1;;;;;817:3412:84;;;;;3439:17;3435:85;;3119:468;:::o;3435:85::-;3473:28;305:1:1;3473:28:84;:::o;1796:162:62:-;1710:6;817:3412:84;-1:-1:-1;;;;;817:3412:84;735:10:71;1855:23:62;1851:101;;1796:162::o;1851:101::-;817:3412:84;;-1:-1:-1;;;1901:40:62;;735:10:71;1901:40:62;;;817:3412:84;;;1901:40:62;2129:766:74;817:3412:84;;;2129:766:74;2276:2;2256:22;;2276:2;;2739:25;2539:180;;;;;;;;;;;;;;;-1:-1:-1;2539:180:74;2739:25;;:::i;:::-;2732:32;;;;;:::o;2252:637::-;2795:83;;2811:1;2795:83;2815:35;2795:83;;:::o;7196:532::-;817:3412:84;;;;;;7282:29:74;;;7327:7;;:::o;7278:444::-;817:3412:84;7378:38:74;;817:3412:84;;;;-1:-1:-1;;;7439:23:74;;817:3412:84;;7439:23:74;7374:348;7492:35;7483:44;;7492:35;;817:3412:84;;-1:-1:-1;;;7550:46:74;;817:3412:84;7550:46:74;;817:3412:84;;;;;7550:46:74;7479:243;7626:30;7617:39;7613:109;;7479:243;7196:532::o;7613:109::-;817:3412:84;;;;7679:32:74;;;;;;817:3412:84;7679:32:74;;817:3412:84;7679:32:74;817:3412:84;;;;7291:20:74;817:3412:84;;;;;7291:20:74;817:3412:84;5140:1530:74;;;6199:66;6186:79;;6182:164;;817:3412:84;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6457:24:74;;;;;;;;;;;;;;-1:-1:-1;;;;;817:3412:84;;6495:20:74;6491:113;;6614:49;;5140:1530;:::o;6491:113::-;6531:62;;;6457:24;6531:62;;:::o;6457:24::-;817:3412:84;;;;;;;;;;6182:164:74;6281:54;;;6297:1;6281:54;6301:30;6281:54;;:::o","linkReferences":{},"immutableReferences":{"51738":[{"start":341,"length":32},{"start":721,"length":32}]}},"methodIdentifiers":{"execute(address,uint256,bytes)":"b61d27f6","getEntryPoint()":"44ab613f","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entrypoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"MinimalAccount__CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimalAccount__NotFromEntryPoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimalAccount__NotFromEntryPointOrOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"functionData\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntryPoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ethereum/MinimalAccount.sol\":\"MinimalAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":foundry-era-contracts/=lib/foundry-era-contracts/\",\":murky/=lib/foundry-era-contracts/lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solpp/=lib/foundry-era-contracts/src/solpp/solpp-generated-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x22a852ab11cd80f4bf1c0628ad713278aaa232b406c23b32b8ec26fab4eea44f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://acd04532887d2dce46794bcb028f90e3289999f560e6896cf72b9e7d332084de\",\"dweb:/ipfs/QmSSkEt5eAJSA7A2uKzrUP6b3WFBd88rMJ9xK2Y24hvc3t\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ethereum/MinimalAccount.sol\":{\"keccak256\":\"0x6ffe6d098fa053754d4f8449e078ed998c29f9f7533334e43e2df8028fa7d7f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa46d131a024e23d1abff0d124e401d53808298216bef666f5c7e6bc34d4dc4\",\"dweb:/ipfs/QmXPGP57rJQEpXMANuTUsxuc1AzVMumvyFqa3b6VdZ157P\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"entrypoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"ECDSAInvalidSignature"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"type":"error","name":"ECDSAInvalidSignatureLength"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"type":"error","name":"ECDSAInvalidSignatureS"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"type":"error","name":"MinimalAccount__CallFailed"},{"inputs":[],"type":"error","name":"MinimalAccount__NotFromEntryPoint"},{"inputs":[],"type":"error","name":"MinimalAccount__NotFromEntryPointOrOwner"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"functionData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"execute"},{"inputs":[],"stateMutability":"view","type":"function","name":"getEntryPoint","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}]},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"details":"Must validate caller is the entryPoint.      Must validate the signature and nonce","params":{"missingAccountFunds":"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.","userOp":"- The operation that is about to be executed.","userOpHash":"- Hash of the user's request data. can be used as the basis for signature."},"returns":{"validationData":"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \"authorizer\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly."}}},"version":1},"userdoc":{"kind":"user","methods":{"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"notice":"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","foundry-devops/=lib/foundry-devops/","foundry-era-contracts/=lib/foundry-era-contracts/","murky/=lib/foundry-era-contracts/lib/murky/","openzeppelin-contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solpp/=lib/foundry-era-contracts/src/solpp/solpp-generated-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/ethereum/MinimalAccount.sol":"MinimalAccount"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/account-abstraction/contracts/core/Helpers.sol":{"keccak256":"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6","urls":["bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e","dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IAccount.sol":{"keccak256":"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78","urls":["bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020","dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IAggregator.sol":{"keccak256":"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588","urls":["bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155","dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol":{"keccak256":"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4","urls":["bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9","dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/INonceManager.sol":{"keccak256":"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb","urls":["bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3","dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IStakeManager.sol":{"keccak256":"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04","urls":["bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00","dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj"],"license":"GPL-3.0-only"},"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x22a852ab11cd80f4bf1c0628ad713278aaa232b406c23b32b8ec26fab4eea44f","urls":["bzz-raw://acd04532887d2dce46794bcb028f90e3289999f560e6896cf72b9e7d332084de","dweb:/ipfs/QmSSkEt5eAJSA7A2uKzrUP6b3WFBd88rMJ9xK2Y24hvc3t"],"license":"GPL-3.0"},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf","urls":["bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c","dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435","urls":["bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c","dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"],"license":"MIT"},"src/ethereum/MinimalAccount.sol":{"keccak256":"0x6ffe6d098fa053754d4f8449e078ed998c29f9f7533334e43e2df8028fa7d7f2","urls":["bzz-raw://1fa46d131a024e23d1abff0d124e401d53808298216bef666f5c7e6bc34d4dc4","dweb:/ipfs/QmXPGP57rJQEpXMANuTUsxuc1AzVMumvyFqa3b6VdZ157P"],"license":"MIT"}},"version":1},"id":84}