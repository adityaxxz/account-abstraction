{"abi":[{"type":"function","name":"createSender","inputs":[{"name":"initCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"sender","type":"address","internalType":"address"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x6080806040523461001657610144908161001c8239f35b600080fdfe6080600436101561000f57600080fd5b6000803560e01c63570e1a361461002557600080fd5b3461010b57602036600319011261010b576004359167ffffffffffffffff9081841161010757366023850112156101075783600401358281116101035736602482870101116101035780601411610103576013198101928084116100ef57600b8201601f19908116603f01168301908111838210176100ef5792846024819482600c60209a968b9960405286845289840196603889018837830101525193013560601c5af190805191156100e7575b506040516001600160a01b039091168152f35b9050386100d4565b634e487b7160e01b85526041600452602485fd5b8380fd5b8280fd5b80fdfea26469706673582212208860c3b7d4f10c7319d8bf2bda847ad473b06e57ba340b85894444387ae79bb764736f6c63430008180033","sourceMap":"205:1026:3:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080600436101561000f57600080fd5b6000803560e01c63570e1a361461002557600080fd5b3461010b57602036600319011261010b576004359167ffffffffffffffff9081841161010757366023850112156101075783600401358281116101035736602482870101116101035780601411610103576013198101928084116100ef57600b8201601f19908116603f01168301908111838210176100ef5792846024819482600c60209a968b9960405286845289840196603889018837830101525193013560601c5af190805191156100e7575b506040516001600160a01b039091168152f35b9050386100d4565b634e487b7160e01b85526041600452602485fd5b8380fd5b8280fd5b80fdfea26469706673582212208860c3b7d4f10c7319d8bf2bda847ad473b06e57ba340b85894444387ae79bb764736f6c63430008180033","sourceMap":"205:1026:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;205:1026:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;726:2;205:1026;;;-1:-1:-1;;205:1026:3;;;;;;;;;;;-1:-1:-1;;205:1026:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:293;205:1026;;;;;863:293;;;;;1169:8;;1165:58;;205:1026;-1:-1:-1;205:1026:3;;-1:-1:-1;;;;;205:1026:3;;;;;;1165:58;1193:19;;1165:58;;;205:1026;-1:-1:-1;;;205:1026:3;;;;;;;;;;;;;;;;;;","linkReferences":{}},"methodIdentifiers":{"createSender(bytes)":"570e1a36"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"createSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSender(bytes)\":{\"params\":{\"initCode\":\"- The initCode value from a UserOp. contains 20 bytes of factory address,                   followed by calldata.\"},\"returns\":{\"sender\":\" - The returned address of the created account, or zero address on failure.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSender(bytes)\":{\"notice\":\"Call the \\\"initCode\\\" factory to create and return the sender account address.\"}},\"notice\":\"Helper contract for EntryPoint, to call userOp.initCode from a \\\"neutral\\\" address, which is explicitly not the entryPoint itself.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/account-abstraction/contracts/core/SenderCreator.sol\":\"SenderCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":foundry-era-contracts/=lib/foundry-era-contracts/\",\":murky/=lib/foundry-era-contracts/lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solpp/=lib/foundry-era-contracts/src/solpp/solpp-generated-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/account-abstraction/contracts/core/SenderCreator.sol\":{\"keccak256\":\"0xeb95afb6e4cf921c1ed105ecb9f549ca46bee57f68acd1d2f4f84607ac0db5c5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2ac91562f1fcabe4809a1b4256895efebcf46f89e08336a6c09ee2d29733238\",\"dweb:/ipfs/QmPsQnPcCzioPwVtUhxkbnwKPC1bnhHSbAwK9GXVpjN3mH\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createSender","outputs":[{"internalType":"address","name":"sender","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"createSender(bytes)":{"params":{"initCode":"- The initCode value from a UserOp. contains 20 bytes of factory address,                   followed by calldata."},"returns":{"sender":" - The returned address of the created account, or zero address on failure."}}},"version":1},"userdoc":{"kind":"user","methods":{"createSender(bytes)":{"notice":"Call the \"initCode\" factory to create and return the sender account address."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","foundry-devops/=lib/foundry-devops/","foundry-era-contracts/=lib/foundry-era-contracts/","murky/=lib/foundry-era-contracts/lib/murky/","openzeppelin-contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solpp/=lib/foundry-era-contracts/src/solpp/solpp-generated-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/account-abstraction/contracts/core/SenderCreator.sol":"SenderCreator"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/account-abstraction/contracts/core/SenderCreator.sol":{"keccak256":"0xeb95afb6e4cf921c1ed105ecb9f549ca46bee57f68acd1d2f4f84607ac0db5c5","urls":["bzz-raw://d2ac91562f1fcabe4809a1b4256895efebcf46f89e08336a6c09ee2d29733238","dweb:/ipfs/QmPsQnPcCzioPwVtUhxkbnwKPC1bnhHSbAwK9GXVpjN3mH"],"license":"GPL-3.0"}},"version":1},"id":3}